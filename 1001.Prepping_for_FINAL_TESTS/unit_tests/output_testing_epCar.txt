sims:{-1: 6, 6000: 50}
c1:1
c2:19652
temperature_init:1
temperature_changes:{-1: 1, 3000000.0: 0.5}
manual_over_ride_play_limit:None
exponent_node_n:1
ucb_denom_k:1
use_policy:True
dirichlet_alpha:0.3
noise:0.3
dirichlet_alpha:0.5
noise:0.5
model_expV_on_dones:True
norm_Qs_OnMaxi:True
norm_Qs_OnAll:True
norm_each_turn:False
env:<class 'game_play.Car_Driving_Env.RaceWorld'>
same_env_each_time:True
channels:3
env_size:[6, 30]
observable_size:[6, 9]
game_modes:1
env_map:[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 0. 0. 1. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [1. 1. 1. 1. 1. 2. 2. 2. 2. 2. 2. 1. 1. 0. 2. 1. 1. 2. 2. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 0. 0. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]]
max_steps:100
actions_size:7
optimal_score:0.86
total_frames:155000
exp_gamma:0.95
image_size:[48, 48]
timesteps_in_obs:2
store_prev_actions:True
running_reward_in_obs:False
deque_length:3
PRESET_CONFIG:6
VK:True
use_two_heads:True
follow_better_policy:0.5
use_siam:True
exploration_type:episodic
rdn_beta:[0.3333333333333333, 2, 6]
explorer_percentage:0.8
reward_exploration:False
memory_size:100
train_dones:True
state_channels:64
res_block_kernel_size:3
state_size:[6, 6]
norm_state_vecs:False
conv1:{'channels': 32, 'kernel_size': 3, 'stride': 2, 'padding': 1}
conv2:{'channels': 64, 'kernel_size': 3, 'stride': 2, 'padding': 1}
res_block_channels:[32, 64]
res_block_ds:[False, False]
conv1:{'kernel_size': 3, 'stride': 1, 'padding': 1}
res_blocks:[64, 64]
reward_conv_channels:32
reward_hidden_dim:128
reward_support:[-1, 1, 41]
terminal_conv_channels:32
terminal_hidden_dim:64
res_block:[64]
value_conv_channels:32
value_hidden_dim:128
value_support:[-1, 1, 41]
policy_conv_channels:32
policy_hidden_dim:128
expV_conv_channels:32
expV_hidden_dim:128
expV_support:[-10, 10, 51]
RND_output_vector:256
RND_loss:cosine
prediction_bias:True
proj_l1:256
proj_out:256
pred_hid:128
update_play_model:16
gamma:0.99
calc_n_step_rewards_after_frames:10000
N_steps_reward:5
start_frame_count:0
load_in_model:False
log_states:True
log_metrics:False
exploration_logger_dims:(1, 180)
device_train:cpu
device_selfplay:cpu
eval_x_frames:10000
eval_count:25
detach_expV_calc:True
use_new_episode_expV:True
start_training_expV_min:10000
start_training_expV_max:20000
start_training_expV_siam_override:0.8
value_only:False
replay_buffer_size:50000
replay_buffer_size_exploration:200000
all_time_buffer_size:200000
batch_size:128
play_workers:12
min_workers:2
max_workers:32
lr:0.001
lr_warmup:1000
lr_decay:1
lr_decay_step:100000
optimizer:<class 'torch.optim.rmsprop.RMSprop'>
momentum:0.9
l2:0.0001
rho:0.99
k:5
value:0.25
dones:2.0
siam:2
rdn:0.5
expV:0.5
train_start_batch_multiple:2
prioritised_replay:True
resampling:False
resampling_use_max:False
resampling_assess_best_child:False
rs_start:1000
ep_to_batch_ratio:[11, 12]
main_to_rdn_ratio:2
train_to_RS_ratio:4
on_policy_expV:False
[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]
 [0. 0. 0. 0. 1. 1. 1. 1. 1. 1. 0. 1. 1. 1. 0. 1. 0. 0. 1. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [1. 1. 1. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [1. 1. 1. 1. 1. 2. 2. 2. 2. 2. 2. 1. 1. 0. 2. 1. 1. 2. 2. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [0. 0. 0. 0. 0. 0. 0. 1. 1. 1. 0. 0. 1. 1. 1. 1. 1. 0. 0. 1. 3. 3. 3. 3.
  3. 3. 3. 3. 3. 3.]
 [0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0. 0. 0. 0. 0.]]
main train batch thing paused
add a thread
Adding thread: now have 13 threads
printing an ep nov before normalisation:  24.978639225540746
printing an ep nov before normalisation:  24.98798478814024
printing an ep nov before normalisation:  52.18554496765137
printing an ep nov before normalisation:  24.965414285341012
Starting evaluation
from probs:  [0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666]
rdn beta is 0 so we're just using the maxi policy
line 256 mcts: sample exp_bonus 23.742064721767065
siam score:  -2.9536937786774203e-05
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.47824693
true state number:  [0, 95]
comparator state stnum:  [0, 100]
pos losses:  {0: 0.23890885710716248, 1: 0.23862546682357788, 2: 0.238735169172287, 3: 0.23869457840919495, 4: 0.23868240416049957}
neg losses:  {0: 0.23873567581176758, 1: 0.2384973168373108, 2: 0.2386026680469513, 3: 0.2385481595993042, 4: 0.23858103156089783}
sample 1s:  [0.479 0.478 0.473 0.475 0.475 0.474 0.479 0.478 0.482 0.479]
neg positives:  [0.476 0.478 0.474 0.478 0.476 0.474 0.477 0.477 0.482 0.477]
rdn probs:  [0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666, 0.16666666666666666]
UNIT TEST: sample policy line 217 mcts : [0. 0. 0. 0. 1. 0. 0.]
printing an ep nov before normalisation:  24.995273906230295
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.4775538
true state number:  [0, 92]
comparator state stnum:  [0, 98]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5175083
true state number:  [0, 92]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5219595
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5309178
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.48581937
true state number:  [0, 97]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6287407
true state number:  [0, 97]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.4056328
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
ep length:  43
deleting a thread, now have 12 threads
Frames:  1478 train batches done:  20 episodes:  63
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22] [0.004 0.008 0.012 0.016 0.02  0.024 0.028 0.032 0.036 0.04  0.043 0.047
 0.051 0.055 0.059 0.063 0.067 0.071 0.075 0.079 0.083 0.087]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.28868312
true state number:  [0, 65]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6542865
true state number:  [0, 62]
comparator state stnum:  [0, 62]
ep length:  47
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6440878
true state number:  [0, 71]
comparator state stnum:  [0, 71]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6017948
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.35712892
true state number:  [0, 71]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.2805898
true state number:  [0, 94]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.44293717
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.52636623
true state number:  [0, 92]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.33610028
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6452703
true state number:  [0, 100]
comparator state stnum:  [0, 99]
ep length:  43
ep length:  53
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18] [0.006 0.012 0.018 0.023 0.029 0.035 0.041 0.047 0.053 0.058 0.064 0.07
 0.076 0.082 0.088 0.094 0.099 0.105]
ep length:  40
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6881927
true state number:  [0, 71]
comparator state stnum:  [0, 71]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
probs:  [0.15252254640927349, 0.2178797732362211, 0.2178797732362211, 0.15252254640927349, 0.08972834808534341, 0.1694670126236673]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.07776821
true state number:  [0, 95]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
probs:  [0.15252254640927349, 0.2178797732362211, 0.2178797732362211, 0.15252254640927349, 0.08972834808534341, 0.1694670126236673]
ep length:  32
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.75523716
true state number:  [0, 96]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.697004
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.3966803
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  53
ep length:  32
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.06688586
true state number:  [0, 98]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.06684676
true state number:  [0, 96]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.54524446
true state number:  [0, 95]
comparator state stnum:  [0, 100]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
ep length:  38
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.064324774
true state number:  [0, 97]
comparator state stnum:  [0, 63]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5988237
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.52124333
true state number:  [0, 64]
comparator state stnum:  [0, 39]
deleting a thread, now have 11 threads
Frames:  1478 train batches done:  65 episodes:  63
ep length:  43
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.22111657
true state number:  [0, 93]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.010870468
true state number:  [0, 95]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5688282
true state number:  [0, 99]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.025171459
true state number:  [0, 99]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.759433
true state number:  [0, 62]
comparator state stnum:  [0, 62]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.81451184
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.567205
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6496645
true state number:  [0, 99]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.74051404
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.13856061
true state number:  [0, 97]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6399828
true state number:  [0, 97]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6430645
true state number:  [0, 96]
comparator state stnum:  [0, 96]
siam score:  -0.3212201
ep length:  46
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0009571772
true state number:  [0, 98]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.57667184
true state number:  [0, 92]
comparator state stnum:  [0, 91]
ep length:  44
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.09119419
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.80438626
true state number:  [0, 100]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.72863746
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.66886646
true state number:  [0, 91]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] [0.005 0.011 0.016 0.021 0.026 0.032 0.037 0.042 0.047 0.053 0.058 0.063
 0.068 0.074 0.079 0.084 0.089 0.095 0.1  ]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7672045
true state number:  [0, 65]
comparator state stnum:  [0, 65]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0013498964
true state number:  [0, 100]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.70232517
true state number:  [0, 99]
comparator state stnum:  [0, 100]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6124607
true state number:  [0, 97]
comparator state stnum:  [0, 97]
deleting a thread, now have 10 threads
Frames:  1478 train batches done:  110 episodes:  63
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.64289653
true state number:  [0, 92]
comparator state stnum:  [0, 92]
ep length:  27
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48] [0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.009 0.01
 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02
 0.021 0.022 0.023 0.024 0.025 0.026 0.026 0.027 0.028 0.029 0.03  0.031
 0.031 0.032 0.033 0.034 0.035 0.036 0.037 0.037 0.038 0.039 0.04  0.041]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.72676545
true state number:  [0, 97]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.645172
true state number:  [0, 97]
comparator state stnum:  [0, 100]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
probs:  [0.15252254640927349, 0.2178797732362211, 0.2178797732362211, 0.15252254640927349, 0.08972834808534341, 0.1694670126236673]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.78977776
true state number:  [0, 34]
comparator state stnum:  [0, 34]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.08313619
true state number:  [0, 97]
comparator state stnum:  [0, 95]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.66596675
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.023905586
true state number:  [0, 91]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7576461
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.58820236
true state number:  [0, 91]
comparator state stnum:  [0, 91]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [19, 34, 35, 16, 8, 41, 24, 18, 26, 51, 36, 18, 29, 9, 62, 32, 49, 35, 55, 12] [22, 33, 36, 19, 9, 42, 25, 19, 28, 52, 37, 17, 30, 10, 63, 33, 50, 36, 57, 13] [8, 6, 25, 31, 21, 27, 5, 7, 10, 63, 2, 5, 1, 30, 37, 42, 6, 4, 31, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00032186892
true state number:  [0, 97]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9713285714285714 -1.0 -0.9713285714285714
probs:  [0.15252254640927349, 0.2178797732362211, 0.2178797732362211, 0.15252254640927349, 0.08972834808534341, 0.1694670126236673]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
printing an ep nov before normalisation:  91.6142463684082
from probs:  [0.16433918237549874, 0.23475996551321818, 0.2054179725391684, 0.14940144049780066, 0.09667999857651337, 0.14940144049780066]
printing an ep nov before normalisation:  89.39155169895717
31 40
from probs:  [0.15732544839410909, 0.24721128415066598, 0.21631302810934955, 0.14421709734627786, 0.10180772630917684, 0.13312541569042066]
33 43
printing an ep nov before normalisation:  54.33252092662855
printing an ep nov before normalisation:  98.65237236022949
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8963037
true state number:  [0, 94]
comparator state stnum:  [0, 94]
printing an ep nov before normalisation:  99.98656272888184
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.47811642
true state number:  [0, 91]
comparator state stnum:  [0, 96]
pos losses:  {0: 0.6099082925548293, 1: 0.6042638759906978, 2: 0.597023411972882, 3: 0.5907549478419839, 4: 0.5844348195480974}
neg losses:  {0: 0.3737949826945997, 1: 0.3795006454807438, 2: 0.3866438285945213, 3: 0.39302631355311773, 4: 0.4000370910722915}
sample 1s:  [0.729 0.225 0.717 0.716 0.767 0.798 0.823 0.799 0.848 0.858]
neg positives:  [0.859 0.876 0.    0.832 0.804 0.    0.    0.845 0.809 0.765]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7936876
true state number:  [0, 95]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.75023884
true state number:  [0, 95]
comparator state stnum:  [0, 95]
deleting a thread, now have 9 threads
Frames:  2226 train batches done:  148 episodes:  89
ep length:  46
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.85236704
true state number:  [0, 100]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.44874513
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.015807549
true state number:  [0, 99]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.10208755
true state number:  [0, 62]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0002705689
true state number:  [0, 97]
comparator state stnum:  [0, 64]
ep length:  26
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.39421812
true state number:  [0, 94]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.36451137
true state number:  [0, 92]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.11047544
true state number:  [0, 64]
comparator state stnum:  [0, 71]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00037745418
true state number:  [0, 34]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7273706
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0044447384
true state number:  [0, 98]
comparator state stnum:  [0, 64]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35] [0.002 0.003 0.005 0.006 0.008 0.01  0.011 0.013 0.014 0.016 0.017 0.019
 0.021 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.033 0.035 0.037 0.038
 0.04  0.041 0.043 0.044 0.046 0.048 0.049 0.051 0.052 0.054 0.056]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48] [0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.009 0.01
 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02
 0.021 0.022 0.023 0.024 0.025 0.026 0.026 0.027 0.028 0.029 0.03  0.031
 0.031 0.032 0.033 0.034 0.035 0.036 0.037 0.037 0.038 0.039 0.04  0.041]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8709074
true state number:  [0, 70]
comparator state stnum:  [0, 70]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  9.755166e-09
true state number:  [0, 36]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.30928522
true state number:  [0, 96]
comparator state stnum:  [0, 95]
ep length:  40
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.3523569
true state number:  [0, 97]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.4178087
true state number:  [0, 95]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00046081492
true state number:  [0, 97]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.33693343
true state number:  [0, 36]
comparator state stnum:  [0, 36]
pos losses:  {0: 0.6235263748301401, 1: 0.616985422372818, 2: 0.6074944724639256, 3: 0.6001723872290717, 4: 0.5937678241067462}
neg losses:  {0: 0.3650913409060902, 1: 0.3719340345925755, 2: 0.3796820918718974, 3: 0.3861330257521735, 4: 0.39328319595919714}
sample 1s:  [0.65  0.806 0.743 0.649 0.602 0.699 0.714 0.059 0.465 0.578]
neg positives:  [0.006 0.006 0.617 0.158 0.511 0.027 0.343 0.368 0.138 0.801]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6045343
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.09708975
true state number:  [0, 99]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.010558621
true state number:  [0, 97]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
probs:  [0.146277456273906, 0.25596337899619764, 0.18616324635473933, 0.15752729450183336, 0.10779116759941773, 0.146277456273906]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.74614006
true state number:  [0, 62]
comparator state stnum:  [0, 35]
deleting a thread, now have 8 threads
Frames:  2226 train batches done:  192 episodes:  89
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.67463666
true state number:  [0, 65]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.43082893
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.86458683
true state number:  [0, 99]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.78046644
true state number:  [0, 95]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48] [0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.009 0.01
 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02
 0.021 0.022 0.023 0.024 0.025 0.026 0.026 0.027 0.028 0.029 0.03  0.031
 0.031 0.032 0.033 0.034 0.035 0.036 0.037 0.037 0.038 0.039 0.04  0.041]
maxi score, test score, baseline:  -0.9760904761904762 -1.0 -0.9760904761904762
ep length:  44
printing an ep nov before normalisation:  74.00849564148047
ep length:  39
printing an ep nov before normalisation:  92.85860988210771
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0009641126
true state number:  [0, 96]
comparator state stnum:  [0, 91]
from probs:  [0.1678319137276602, 0.25172970211919404, 0.1678319137276602, 0.1678319137276602, 0.10490857243400985, 0.1398659842638156]
from probs:  [0.1678319137276602, 0.25172970211919404, 0.1678319137276602, 0.1678319137276602, 0.10490857243400985, 0.1398659842638156]
printing an ep nov before normalisation:  90.89179808661099
48 65
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  4.384745e-06
true state number:  [0, 100]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9786234042553191 -1.0 -0.9786234042553191
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7992614
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.69735456
true state number:  [0, 99]
comparator state stnum:  [0, 71]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  3.493697e-06
true state number:  [0, 99]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7914828
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  6.9110036e-05
true state number:  [0, 97]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.036478404
true state number:  [0, 71]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7000348
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.04223826
true state number:  [0, 95]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7196003
true state number:  [0, 63]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.82962704
true state number:  [0, 96]
comparator state stnum:  [0, 96]
pos losses:  {0: 0.6362694136474444, 1: 0.6287636715432872, 2: 0.6199183596217114, 3: 0.6119076977605405, 4: 0.6044740347758584}
neg losses:  {0: 0.3558196652194728, 1: 0.36227530435375543, 2: 0.3698906372422757, 3: 0.37735646976077036, 4: 0.3846959308437679}
sample 1s:  [0.345 0.738 0.792 0.787 0.356 0.315 0.798 0.223 0.809 0.78 ]
neg positives:  [0.731 0.758 0.216 0.387 0.597 0.    0.348 0.    0.    0.037]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00015375478
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.72844356
true state number:  [0, 96]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
deleting a thread, now have 7 threads
Frames:  2892 train batches done:  232 episodes:  121
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37] [0.001 0.003 0.004 0.006 0.007 0.009 0.01  0.011 0.013 0.014 0.016 0.017
 0.018 0.02  0.021 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.033 0.034
 0.036 0.037 0.038 0.04  0.041 0.043 0.044 0.046 0.047 0.048 0.05  0.051
 0.053]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.94585913
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9786234042553191 -1.0 -0.9786234042553191
probs:  [0.1421533951515017, 0.2700566464638275, 0.16879990584156954, 0.1800506547995982, 0.10389173877601958, 0.13504765896748358]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.67393637
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.85523564
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5961989
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.20740442
true state number:  [0, 102]
comparator state stnum:  [0, 102]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  6.967449e-05
true state number:  [0, 98]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.86587507
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6735904
true state number:  [0, 91]
comparator state stnum:  [0, 93]
maxi score, test score, baseline:  -0.9786234042553191 -1.0 -0.9786234042553191
probs:  [0.1421533951515017, 0.2700566464638275, 0.16879990584156954, 0.1800506547995982, 0.10389173877601958, 0.13504765896748358]
ep length:  38
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.001476099
true state number:  [0, 97]
comparator state stnum:  [0, 94]
using another actor
from probs:  [0.16280367276318974, 0.22093206740955568, 0.1718458674859578, 0.19332107995253187, 0.11048811758146036, 0.14060919480730455]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8283488
true state number:  [0, 97]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.50864774
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  34.579809506734215
from probs:  [0.157473514102551, 0.18371126844770275, 0.18371126844770275, 0.20666930349971052, 0.11811688258482339, 0.15031776291750962]
from probs:  [0.15654518147566193, 0.19132212521052425, 0.18125511518201146, 0.19132212521052425, 0.12301027144561615, 0.15654518147566193]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
maxi score, test score, baseline:  -0.9813814814814815 -1.0 -0.9813814814814815
probs:  [0.1580589004383463, 0.2019498183658698, 0.16524105064466832, 0.19132359613078517, 0.125367733981984, 0.1580589004383463]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.76662254
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6437631
true state number:  [0, 99]
comparator state stnum:  [0, 102]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9202183
true state number:  [0, 96]
comparator state stnum:  [0, 96]
pos losses:  {0: 0.6428334984116089, 1: 0.6343442566860887, 2: 0.624882773125082, 3: 0.616804976212351, 4: 0.609476118383551}
neg losses:  {0: 0.35030231182288407, 1: 0.35652655419102286, 2: 0.3644649592557348, 3: 0.3720950317337997, 4: 0.37974955152748224}
sample 1s:  [0.801 0.866 0.763 0.066 0.028 0.894 0.911 0.222 0.527 0.923]
neg positives:  [0.002 0.114 0.128 0.002 0.113 0.002 0.619 0.458 0.    0.   ]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21] [0.004 0.009 0.013 0.017 0.022 0.026 0.03  0.035 0.039 0.043 0.048 0.052
 0.056 0.061 0.065 0.069 0.074 0.078 0.082 0.087 0.091]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.877343
true state number:  [0, 95]
comparator state stnum:  [0, 95]
siam score:  -0.41130248
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8294718
true state number:  [0, 96]
comparator state stnum:  [0, 96]
maxi score, test score, baseline:  -0.9820428571428571 -1.0 -0.9820428571428571
probs:  [0.15872190918941337, 0.202796966154887, 0.16593419123830905, 0.19212616288956177, 0.12169886133841548, 0.15872190918941337]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.43659583
true state number:  [0, 95]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.77037734
true state number:  [0, 91]
comparator state stnum:  [0, 91]
deleting a thread, now have 6 threads
Frames:  3613 train batches done:  272 episodes:  159
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5887874
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.13057992
true state number:  [0, 97]
comparator state stnum:  [0, 97]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [16, 13, 47, 27, 18, 51, 4, 38, 4, 29, 40, 27, 30, 45, 28, 14, 24, 22, 23, 38] [19, 14, 48, 26, 19, 52, 6, 41, 4, 31, 41, 26, 32, 47, 31, 13, 26, 25, 23, 39] [31, 33, 27, 4, 8, 0, 34, 12, 28, 14, 12, 8, 5, 14, 18, 26, 13, 39, 4, 22]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8048477
true state number:  [0, 64]
comparator state stnum:  [0, 34]
options / WEIGHTS  [1, 2, 3, 10, 11, 12] [0.026 0.051 0.077 0.256 0.282 0.308]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.020701926
true state number:  [0, 93]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5786172
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.48317984
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.03699554
true state number:  [0, 95]
comparator state stnum:  [0, 92]
pos losses:  {0: 0.6465444070892734, 1: 0.6373813116883899, 2: 0.6277656219639145, 3: 0.6198266031858805, 4: 0.6120850029108408}
neg losses:  {0: 0.3506550189706829, 1: 0.3559631906397693, 2: 0.36344947910809017, 3: 0.37095190834749, 4: 0.3789006275730533}
sample 1s:  [0.001 0.958 0.781 0.808 0.901 0.643 0.003 0.004 0.626 0.816]
neg positives:  [0.453 0.57  0.464 0.    0.402 0.897 0.718 0.626 0.598 0.   ]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.3608825
true state number:  [0, 96]
comparator state stnum:  [0, 92]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.008
 0.009 0.01  0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016 0.017
 0.017 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024 0.025
 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031 0.032 0.033 0.034
 0.034 0.035 0.036 0.036 0.037]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.72691953
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7615011
true state number:  [0, 99]
comparator state stnum:  [0, 99]
pos losses:  {0: 0.6467435949835284, 1: 0.6367996254871632, 2: 0.6265671238817018, 3: 0.6181831384527272, 4: 0.6101059151106867}
neg losses:  {0: 0.3522907654786932, 1: 0.35759770962698706, 2: 0.36524270834593936, 3: 0.3726725751983708, 4: 0.38050341462266857}
sample 1s:  [0.38  0.683 0.696 0.656 0.179 0.229 0.631 0.386 0.589 0.389]
neg positives:  [0.688 0.36  0.385 0.38  0.699 0.119 0.791 0.389 0.691 0.072]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9793051
true state number:  [0, 100]
comparator state stnum:  [0, 100]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.17913613
true state number:  [0, 64]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.009880541
true state number:  [0, 36]
comparator state stnum:  [0, 62]
pos losses:  {0: 0.645744793767097, 1: 0.6357193105172791, 2: 0.6256335453699099, 3: 0.6174561149321947, 4: 0.6095071562984645}
neg losses:  {0: 0.3533718682975577, 1: 0.35877858382343447, 2: 0.3665496150919255, 3: 0.37410854543215477, 4: 0.3820237971392254}
sample 1s:  [0.733 0.855 0.684 0.521 0.596 0.512 0.583 0.593 0.602 0.606]
neg positives:  [0.565 0.714 0.775 0.503 0.498 0.622 0.893 0.404 0.354 0.339]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0014729307
true state number:  [0, 95]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.50650454
true state number:  [0, 97]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
maxi score, test score, baseline:  -0.9820428571428571 -1.0 -0.9820428571428571
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5805196
true state number:  [0, 102]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.4915948
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.015713817
true state number:  [0, 96]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.122482575
true state number:  [0, 63]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.51530725
true state number:  [0, 92]
comparator state stnum:  [0, 92]
ep length:  46
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [29, 33, 14, 14, 19, 13, 13, 31, 35, 38, 28, 14, 16, 9, 45, 40, 49, 36, 21, 34] [30, 34, 16, 15, 20, 14, 15, 31, 38, 41, 29, 15, 17, 8, 47, 41, 51, 37, 22, 36] [10, 9, 35, 2, 33, 1, 3, 1, 6, 4, 5, 39, 3, 25, 20, 1, 33, 17, 33, 47]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7346926
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.71527904
true state number:  [0, 96]
comparator state stnum:  [0, 96]
in main func line 156:  73
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7830503
true state number:  [0, 97]
comparator state stnum:  [0, 97]
75 97
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7230145
true state number:  [0, 71]
comparator state stnum:  [0, 71]
deleting a thread, now have 5 threads
Frames:  4092 train batches done:  322 episodes:  180
printing an ep nov before normalisation:  93.3229353065987
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19] [0.005 0.011 0.016 0.021 0.026 0.032 0.037 0.042 0.047 0.053 0.058 0.063
 0.068 0.074 0.079 0.084 0.089 0.095 0.1  ]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.55375904
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7400605
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9835065573770492 -1.0 -0.9835065573770492
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.21505539
true state number:  [0, 99]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6123285
true state number:  [0, 93]
comparator state stnum:  [0, 62]
ep length:  38
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.70004135
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.69726855
true state number:  [0, 95]
comparator state stnum:  [0, 95]
ep length:  45
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.48197687
true state number:  [0, 91]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.6451183220919441, 1: 0.6355571455815259, 2: 0.6256362168227925, 3: 0.6177519282873939, 4: 0.6099910967490252}
neg losses:  {0: 0.3526442256043939, 1: 0.3580238493926385, 2: 0.3652445261092747, 3: 0.3726667531272944, 4: 0.3800571932512171}
sample 1s:  [0.715 0.356 0.351 0.71  0.159 0.421 0.278 0.492 0.376 0.507]
neg positives:  [0.002 0.356 0.743 0.672 0.096 0.641 0.741 0.183 0.539 0.   ]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.83869517
true state number:  [0, 96]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6994819
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.48486474
true state number:  [0, 91]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32] [0.002 0.004 0.006 0.008 0.009 0.011 0.013 0.015 0.017 0.019 0.021 0.023
 0.025 0.027 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.045
 0.047 0.049 0.051 0.053 0.055 0.057 0.059 0.061]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8062134
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6788648
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6910335
true state number:  [0, 94]
comparator state stnum:  [0, 94]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.28483117
true state number:  [0, 62]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.749049
true state number:  [0, 93]
comparator state stnum:  [0, 93]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21] [0.004 0.009 0.013 0.017 0.022 0.026 0.03  0.035 0.039 0.043 0.048 0.052
 0.056 0.061 0.065 0.069 0.074 0.078 0.082 0.087 0.091]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  6.298709e-05
true state number:  [0, 95]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.54516685
true state number:  [0, 91]
comparator state stnum:  [0, 91]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [35, 12, 28, 21, 31, 13, 30, 46, 14, 31, 34, 21, 5, 22, 17, 26, 32, 51, 26, 11] [36, 12, 29, 22, 30, 15, 29, 47, 15, 32, 35, 22, 7, 23, 18, 27, 32, 50, 28, 12] [10, 27, 6, 9, 18, 1, 6, 3, 0, 15, 14, 38, 15, 7, 5, 12, 15, 39, 12, 31]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6785537
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.964322
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6121507
true state number:  [0, 97]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6542784
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.77821875
true state number:  [0, 94]
comparator state stnum:  [0, 94]
deleting a thread, now have 4 threads
Frames:  4267 train batches done:  366 episodes:  185
maxi score, test score, baseline:  -0.9835065573770492 -1.0 -0.9835065573770492
probs:  [0.15666324109492902, 0.22260160409931862, 0.16268645694629152, 0.16919153006576304, 0.1321939266987688, 0.15666324109492902]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.22526415
true state number:  [0, 96]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9835065573770492 -1.0 -0.9835065573770492
probs:  [0.15666324109492902, 0.22260160409931862, 0.16268645694629152, 0.16919153006576304, 0.1321939266987688, 0.15666324109492902]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [31, 23, 23, 26, 48, 50, 50, 33, 11, 30, 22, 26, 35, 31, 31, 9, 34, 37, 25, 30] [33, 25, 24, 26, 51, 51, 51, 34, 13, 29, 24, 26, 36, 33, 32, 10, 36, 38, 28, 29] [1, 35, 6, 36, 20, 21, 30, 15, 1, 9, 3, 16, 52, 18, 5, 20, 8, 27, 0, 15]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.73884094
true state number:  [0, 91]
comparator state stnum:  [0, 34]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.70752484
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7549138
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.63353205
true state number:  [0, 63]
comparator state stnum:  [0, 63]
ep length:  62
printing an ep nov before normalisation:  98.50538722501983
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.50892204
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7264744
true state number:  [0, 95]
comparator state stnum:  [0, 63]
maxi score, test score, baseline:  -0.9837709677419355 -1.0 -0.9837709677419355
probs:  [0.15842606105786572, 0.2138540950881129, 0.1645170538084423, 0.17109532597906507, 0.1336814030086482, 0.15842606105786572]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.77998227
true state number:  [0, 93]
comparator state stnum:  [0, 93]
using explorer policy with actor:  1
using another actor
from probs:  [0.156442315654555, 0.19723669834414853, 0.16802590580098278, 0.17448598492110595, 0.1417818343754823, 0.16202726090372555]
from probs:  [0.1530158068845603, 0.19956617335538238, 0.17001038511993977, 0.17001038511993977, 0.1434563566271593, 0.16394089289301852]
Printing some Q and Qe and total Qs values:  [[0.747]
 [0.747]
 [0.747]
 [0.747]
 [0.747]
 [0.747]
 [0.747]] [[48.689]
 [48.689]
 [48.689]
 [48.689]
 [48.689]
 [48.689]
 [48.689]] [[1.08]
 [1.08]
 [1.08]
 [1.08]
 [1.08]
 [1.08]
 [1.08]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7168493
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.50486165
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.073761955
true state number:  [0, 66]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.123647526
true state number:  [0, 62]
comparator state stnum:  [0, 91]
siam score:  -0.42660087
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6298741
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.49810144
true state number:  [0, 93]
comparator state stnum:  [0, 93]
maxi score, test score, baseline:  -0.9845153846153847 -1.0 -0.9845153846153847
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.007 0.007 0.008
 0.009 0.009 0.01  0.011 0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016
 0.017 0.018 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024
 0.025 0.026 0.026 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.032
 0.033 0.034 0.034 0.035 0.036 0.036]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  3.4129187e-06
true state number:  [0, 96]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
maxi score, test score, baseline:  -0.9845153846153847 -1.0 -0.9845153846153847
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.76875424
true state number:  [0, 91]
comparator state stnum:  [0, 91]
deleting a thread, now have 3 threads
Frames:  4788 train batches done:  406 episodes:  205
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.80711365
true state number:  [0, 95]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31] [0.002 0.004 0.006 0.008 0.01  0.012 0.014 0.016 0.018 0.02  0.022 0.024
 0.026 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.046 0.048
 0.05  0.052 0.054 0.056 0.058 0.06  0.062]
ep length:  61
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.34746498
true state number:  [0, 91]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39] [0.001 0.003 0.004 0.005 0.006 0.008 0.009 0.01  0.012 0.013 0.014 0.015
 0.017 0.018 0.019 0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029 0.031
 0.032 0.033 0.035 0.036 0.037 0.038 0.04  0.041 0.042 0.044 0.045 0.046
 0.047 0.049 0.05 ]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.716467
true state number:  [0, 91]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6167509
true state number:  [0, 91]
comparator state stnum:  [0, 34]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.74116117
true state number:  [0, 95]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.025631314
true state number:  [0, 96]
comparator state stnum:  [0, 64]
from probs:  [0.14257855560962807, 0.20454048810068354, 0.1742479877717231, 0.16802720645416871, 0.14257855560962807, 0.16802720645416871]
Printing some Q and Qe and total Qs values:  [[0.97]
 [0.97]
 [0.97]
 [0.97]
 [0.97]
 [0.97]
 [0.97]] [[99.905]
 [99.905]
 [99.905]
 [99.905]
 [99.905]
 [99.905]
 [99.905]] [[1.303]
 [1.303]
 [1.303]
 [1.303]
 [1.303]
 [1.303]
 [1.303]]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.05005084
true state number:  [0, 91]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  91.07192039489746
siam score:  -0.44067848
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56] [0.001 0.001 0.002 0.003 0.003 0.004 0.004 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.009 0.01  0.011 0.011 0.012 0.013 0.013 0.014 0.014 0.015
 0.016 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023
 0.023 0.024 0.024 0.025 0.026 0.026 0.027 0.028 0.028 0.029 0.029 0.03
 0.031 0.031 0.032 0.033 0.033 0.034 0.034 0.035]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8042723
true state number:  [0, 92]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  94.0472096402965
using another actor
printing an ep nov before normalisation:  50.64030753241645
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6399912
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7503051
true state number:  [0, 34]
comparator state stnum:  [0, 34]
pos losses:  {0: 0.6512446953593013, 1: 0.6421947941601833, 2: 0.6327311831099964, 3: 0.6246212713907813, 4: 0.6165934692476397}
neg losses:  {0: 0.3478245769984254, 1: 0.3530201435646164, 2: 0.36027301478887275, 3: 0.3678854971984837, 4: 0.37530854943199693}
sample 1s:  [0.687 0.531 0.71  0.373 0.501 0.607 0.46  0.631 0.728 0.571]
neg positives:  [0.709 0.    0.    0.003 0.042 0.525 0.482 0.658 0.031 0.   ]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.96185756
true state number:  [0, 98]
comparator state stnum:  [0, 98]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.008 0.009
 0.01  0.011 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.017 0.018
 0.019 0.02  0.02  0.021 0.022 0.023 0.023 0.024 0.025 0.026 0.026 0.027
 0.028 0.029 0.029 0.03  0.031 0.032 0.032 0.033 0.034 0.035 0.035 0.036
 0.037 0.038 0.038]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.4997629
true state number:  [0, 92]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5079532
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  45
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.74287283
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8779368
true state number:  [0, 96]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0033033374
true state number:  [0, 65]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9858154929577465 -1.0 -0.9858154929577465
probs:  [0.14885693555250853, 0.1946372784938619, 0.16869508416042833, 0.16869508416042833, 0.1446059037079543, 0.17450971392481862]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [32, 48, 16, 42, 38, 23, 30, 4, 39, 15, 32, 22, 11, 42, 47, 11, 36, 21, 27, 6] [33, 50, 15, 45, 37, 25, 32, 4, 40, 16, 35, 22, 12, 43, 50, 12, 37, 22, 28, 7] [5, 35, 4, 10, 22, 11, 52, 17, 1, 3, 20, 32, 32, 12, 37, 0, 25, 35, 13, 19]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.44725946
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  30
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.90542865
true state number:  [0, 96]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.84145474
true state number:  [0, 96]
comparator state stnum:  [0, 96]
ep length:  44
ep length:  60
deleting a thread, now have 2 threads
Frames:  5266 train batches done:  445 episodes:  223
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.46601477
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.041964386
true state number:  [0, 95]
comparator state stnum:  [0, 97]
maxi score, test score, baseline:  -0.9858154929577465 -1.0 -0.9858154929577465
probs:  [0.14885693555250853, 0.1946372784938619, 0.16869508416042833, 0.16869508416042833, 0.1446059037079543, 0.17450971392481862]
maxi score, test score, baseline:  -0.9858154929577465 -1.0 -0.9858154929577465
probs:  [0.14885693555250853, 0.1946372784938619, 0.16869508416042833, 0.16869508416042833, 0.1446059037079543, 0.17450971392481862]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.84295696
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00022704055
true state number:  [0, 96]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.3958317
true state number:  [0, 65]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.096851975
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.71377087
true state number:  [0, 71]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9858154929577465 -1.0 -0.9858154929577465
probs:  [0.14885693555250853, 0.1946372784938619, 0.16869508416042833, 0.16869508416042833, 0.1446059037079543, 0.17450971392481862]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8297372
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.867387
true state number:  [0, 91]
comparator state stnum:  [0, 62]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024
 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.036
 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.044]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] [0.005 0.01  0.014 0.019 0.024 0.029 0.033 0.038 0.043 0.048 0.052 0.057
 0.062 0.067 0.071 0.076 0.081 0.086 0.09  0.095]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5941916
true state number:  [0, 94]
comparator state stnum:  [0, 94]
maxi score, test score, baseline:  -0.9858154929577465 -1.0 -0.9858154929577465
probs:  [0.14885693555250853, 0.1946372784938619, 0.16869508416042833, 0.16869508416042833, 0.1446059037079543, 0.17450971392481862]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
pos losses:  {0: 0.6527138447864748, 1: 0.6438683446867641, 2: 0.6343314762497361, 3: 0.6260114852742199, 4: 0.6176216346876962}
neg losses:  {0: 0.3459668035631056, 1: 0.3513741535154772, 2: 0.35874022207992934, 3: 0.36627404372413436, 4: 0.37374469515307124}
sample 1s:  [0.405 0.476 0.426 0.172 0.39  0.454 0.42  0.413 0.414 0.397]
neg positives:  [0.367 0.334 0.454 0.407 0.389 0.001 0.007 0.314 0.041 0.419]
using another actor
from probs:  [0.15095483798705472, 0.1832869322213153, 0.17107258551059465, 0.17107258551059465, 0.14664389208915332, 0.17696916668128737]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.18490557
true state number:  [0, 96]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.07225406
true state number:  [0, 94]
comparator state stnum:  [0, 97]
104 127
using another actor
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
printing an ep nov before normalisation:  98.89095735070296
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.49869248
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6224827
true state number:  [0, 96]
comparator state stnum:  [0, 96]
maxi score, test score, baseline:  -0.9863864864864865 -1.0 -0.9863864864864865
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.608146
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.58863825
true state number:  [0, 92]
comparator state stnum:  [0, 91]
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861, 451007, 904523, 185455, 734543, 551914, 765814, 306245, 359144, 733219, 615275, 734570, 521900, 819923, 375057, 852950]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16] [0.008 0.017 0.025 0.034 0.042 0.05  0.059 0.084 0.092 0.101 0.109 0.118
 0.126 0.134]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.51029044
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.4353906
true state number:  [0, 91]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6616669
true state number:  [0, 96]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
maxi score, test score, baseline:  -0.9865666666666667 -1.0 -0.9865666666666667
probs:  [0.14972778822370156, 0.1806908156737478, 0.1746702270029055, 0.1746702270029055, 0.1455707150938342, 0.1746702270029055]
ep length:  70
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.077841386
true state number:  [0, 63]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.69542104
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8009832
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8875969
true state number:  [0, 65]
comparator state stnum:  [0, 65]
siam score:  -0.47218567
maxi score, test score, baseline:  -0.9865666666666667 -1.0 -0.9865666666666667
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21] [0.004 0.009 0.013 0.017 0.022 0.026 0.03  0.035 0.039 0.043 0.048 0.052
 0.056 0.061 0.065 0.069 0.074 0.078 0.082 0.087 0.091]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6279138
true state number:  [0, 92]
comparator state stnum:  [0, 92]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.62927604
true state number:  [0, 62]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0064271833
true state number:  [0, 91]
comparator state stnum:  [0, 97]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15] [0.01  0.021 0.031 0.042 0.052 0.062 0.104 0.115 0.125 0.135 0.146 0.156]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.59928817
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9865666666666667 -1.0 -0.9865666666666667
probs:  [0.14972778822370156, 0.1806908156737478, 0.1746702270029055, 0.1746702270029055, 0.1455707150938342, 0.1746702270029055]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0003574622
true state number:  [0, 99]
comparator state stnum:  [0, 64]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.019401206
true state number:  [0, 93]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.79385567
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.84324867
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9865666666666667 -1.0 -0.9865666666666667
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6281895
true state number:  [0, 92]
comparator state stnum:  [0, 92]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46] [0.001 0.002 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.019 0.02  0.021 0.022
 0.023 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.031 0.032 0.033
 0.034 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.29638085
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9867421052631579 -1.0 -0.9867421052631579
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9421483
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0035147816
true state number:  [0, 99]
comparator state stnum:  [0, 94]
printing an ep nov before normalisation:  94.23517386118571
printing an ep nov before normalisation:  55.4439850749953
siam score:  -0.4752381
maxi score, test score, baseline:  -0.986912987012987 -1.0 -0.986912987012987
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.007 0.007 0.008
 0.009 0.009 0.01  0.011 0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016
 0.017 0.018 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024
 0.025 0.026 0.026 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.032
 0.033 0.034 0.034 0.035 0.036 0.036]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.59076935
true state number:  [0, 95]
comparator state stnum:  [0, 95]
ep length:  38
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6582897
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.61839074
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.35471576
true state number:  [0, 65]
comparator state stnum:  [0, 71]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.046982028
true state number:  [0, 94]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00088484026
true state number:  [0, 95]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.986912987012987 -1.0 -0.986912987012987
probs:  [0.15419792214867184, 0.179056069863769, 0.179056069863769, 0.179056069863769, 0.15003250280181774, 0.15860136545820333]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.29062346
true state number:  [0, 65]
comparator state stnum:  [0, 72]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.47554165
true state number:  [0, 93]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.38945755
true state number:  [0, 63]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  3.6559963e-05
true state number:  [0, 99]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.986912987012987 -1.0 -0.986912987012987
probs:  [0.15419792214867184, 0.179056069863769, 0.179056069863769, 0.179056069863769, 0.15003250280181774, 0.15860136545820333]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.07787483
true state number:  [0, 63]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.86806226
true state number:  [0, 95]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8262365
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.986484
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7526063
true state number:  [0, 71]
comparator state stnum:  [0, 42]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18] [0.006 0.012 0.018 0.023 0.029 0.035 0.041 0.047 0.053 0.058 0.064 0.07
 0.076 0.082 0.088 0.094 0.099 0.105]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.003998325
true state number:  [0, 92]
comparator state stnum:  [0, 37]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.003146935
true state number:  [0, 35]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.6541294611212033, 1: 0.645681683919323, 2: 0.6357163049614252, 3: 0.627044915819346, 4: 0.6180766906533668}
neg losses:  {0: 0.3454565793943049, 1: 0.3511359291846183, 2: 0.35816228150654195, 3: 0.3652129513559057, 4: 0.37197638986938036}
sample 1s:  [0.663 0.583 0.77  0.121 0.691 0.983 0.676 0.671 0.718 0.958]
neg positives:  [0.    0.583 0.001 0.549 0.342 0.669 0.067 0.    0.526 0.241]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.4408637
true state number:  [0, 63]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.71953547
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  96.18353681231726
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0007950417
true state number:  [0, 35]
comparator state stnum:  [0, 91]
using explorer policy with actor:  1
siam score:  -0.42978895
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00011791246
true state number:  [0, 98]
comparator state stnum:  [0, 63]
maxi score, test score, baseline:  -0.986912987012987 -1.0 -0.986912987012987
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.47070602
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8747754
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  83.25748382636593
printing an ep nov before normalisation:  70.92753220349934
ep length:  55
printing an ep nov before normalisation:  77.31415014955914
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.4119775e-05
true state number:  [0, 96]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7419482
true state number:  [0, 97]
comparator state stnum:  [0, 97]
pos losses:  {0: 0.6551985458776839, 1: 0.646724318554255, 2: 0.6367012906806133, 3: 0.6281036582879641, 4: 0.6190652445980788}
neg losses:  {0: 0.3440751464573485, 1: 0.34955489769954545, 2: 0.3564229960476018, 3: 0.36333021699091156, 4: 0.36991921825744617}
sample 1s:  [0.725 0.686 0.692 0.461 0.761 0.761 0.809 0.759 0.708 0.34 ]
neg positives:  [0.499 0.331 0.081 0.    0.531 0.458 0.001 0.11  0.    0.008]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6160808
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8645207
true state number:  [0, 98]
comparator state stnum:  [0, 98]
pos losses:  {0: 0.6557221833523029, 1: 0.6472384801474951, 2: 0.6372481794981119, 3: 0.628669452816782, 4: 0.6195213189048152}
neg losses:  {0: 0.3436537945783266, 1: 0.34912524850351406, 2: 0.35601249187650646, 3: 0.36294675519603126, 4: 0.36949135309692777}
sample 1s:  [0.802 0.725 0.422 0.754 0.499 0.644 0.874 0.395 0.892 0.623]
neg positives:  [0.    0.716 0.    0.012 0.5   0.006 0.075 0.    0.157 0.555]
siam score:  -0.4645916
line 256 mcts: sample exp_bonus 74.02182378242885
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.085097805
true state number:  [0, 63]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9458479
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.85301185
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  7.778578e-13
true state number:  [0, 99]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.4387138
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  44
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8603878
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6235712
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.27587402
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.050867684
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8191082
true state number:  [0, 94]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7050411
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5977391
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.986912987012987 -1.0 -0.986912987012987
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.7417738e-06
true state number:  [0, 97]
comparator state stnum:  [0, 34]
printing an ep nov before normalisation:  99.69283458978141
ep length:  58
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.09025231
true state number:  [0, 94]
comparator state stnum:  [0, 93]
pos losses:  {0: 0.6571857589216986, 1: 0.6487802054054549, 2: 0.638732605271323, 3: 0.6299366132705072, 4: 0.6206343924671514}
neg losses:  {0: 0.3428522101075379, 1: 0.34806902030694115, 2: 0.3547241530057901, 3: 0.3613227098360914, 4: 0.3676282991351131}
sample 1s:  [0.758 0.76  0.602 0.424 0.654 0.798 0.766 0.665 0.547 0.495]
neg positives:  [0.549 0.002 0.151 0.318 0.006 0.33  0.006 0.057 0.706 0.889]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.57630587
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5830227
true state number:  [0, 91]
comparator state stnum:  [0, 91]
siam score:  -0.49112546
in main func line 156:  122
printing an ep nov before normalisation:  46.68826127101902
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.4407336
true state number:  [0, 91]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.03547783
true state number:  [0, 94]
comparator state stnum:  [0, 91]
ep length:  24
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9094199
true state number:  [0, 99]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  42.59324550628662
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7448562
true state number:  [0, 95]
comparator state stnum:  [0, 95]
siam score:  -0.4961908
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.66559404
true state number:  [0, 98]
comparator state stnum:  [0, 97]
using explorer policy with actor:  1
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15325156939869292, 0.182897868211776, 0.17718477937800478, 0.182897868211776, 0.14176362860862324, 0.16200428619112697]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16] [0.008 0.017 0.025 0.034 0.042 0.05  0.059 0.084 0.092 0.101 0.109 0.118
 0.126 0.134]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.64551437
true state number:  [0, 35]
comparator state stnum:  [0, 36]
printing an ep nov before normalisation:  94.0113457739676
siam score:  -0.4955327
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.50952643
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.4526937
true state number:  [0, 92]
comparator state stnum:  [0, 92]
siam score:  -0.4980337
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.49612167
true state number:  [0, 35]
comparator state stnum:  [0, 37]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.015075205
true state number:  [0, 64]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.93513167
true state number:  [0, 99]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.020881234
true state number:  [0, 93]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.95267224
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.55501103
true state number:  [0, 63]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.3147724
true state number:  [0, 91]
comparator state stnum:  [0, 35]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8358742
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.60553706
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  53.51968133155811
main train batch thing paused
add a thread
Adding thread: now have 3 threads
Printing some Q and Qe and total Qs values:  [[1.073]
 [1.073]
 [1.073]
 [0.937]
 [1.073]
 [1.073]
 [1.073]] [[99.976]
 [99.976]
 [99.976]
 [99.758]
 [99.976]
 [99.976]
 [99.976]] [[2.406]
 [2.406]
 [2.406]
 [2.264]
 [2.406]
 [2.406]
 [2.406]]
printing an ep nov before normalisation:  99.7288653998524
printing an ep nov before normalisation:  99.6644835001564
printing an ep nov before normalisation:  99.33589949778553
Printing some Q and Qe and total Qs values:  [[0.372]
 [0.338]
 [0.348]
 [0.377]
 [0.379]
 [0.378]
 [0.374]] [[95.257]
 [95.742]
 [90.777]
 [95.387]
 [95.132]
 [95.091]
 [95.186]] [[1.584]
 [1.563]
 [1.447]
 [1.593]
 [1.589]
 [1.586]
 [1.585]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.80402714
true state number:  [0, 96]
comparator state stnum:  [0, 65]
printing an ep nov before normalisation:  99.36822394086838
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.15353416
true state number:  [0, 93]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.30402324
true state number:  [0, 63]
comparator state stnum:  [0, 63]
using explorer policy with actor:  1
printing an ep nov before normalisation:  48.581562632216055
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
ep length:  38
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [18, 11, 11, 8, 57, 86, 18, 36, 18, 25, 19, 40, 37, 41, 19, 38, 33, 43, 7, 27] [21, 12, 13, 10, 56, 87, 19, 37, 19, 26, 19, 40, 37, 43, 20, 39, 32, 45, 6, 28] [42, 1, 1, 20, 42, 28, 31, 21, 1, 2, 8, 9, 3, 12, 5, 12, 51, 29, 25, 13]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00010366859
true state number:  [0, 94]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.63239324
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  68.16146850585938
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.67137706
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6042728
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  62
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7930182
true state number:  [0, 71]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5211168
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.9530092
true state number:  [0, 96]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.92660666
true state number:  [0, 35]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  75.28155123954933
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.09456206
true state number:  [0, 97]
comparator state stnum:  [0, 98]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.006
 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01
 0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013
 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016
 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019
 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022 0.022 0.022 0.022
 0.023 0.023]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6094178
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5675529
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  3.807595e-06
true state number:  [0, 35]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [63, 22, 43, 50, 46, 27, 23, 11, 10, 11, 22, 30, 24, 22, 10, 33, 31, 16, 34, 67] [64, 21, 45, 49, 47, 28, 22, 14, 11, 14, 21, 31, 25, 23, 11, 34, 33, 15, 37, 68] [8, 6, 1, 63, 7, 12, 9, 33, 32, 23, 7, 13, 5, 51, 37, 1, 0, 27, 11, 34]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.08890592
true state number:  [0, 35]
comparator state stnum:  [0, 64]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.48227397
true state number:  [0, 64]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
UNIT TEST: sample policy line 217 mcts : [0.102 0.184 0.041 0.102 0.163 0.245 0.163]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5624582
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8123908
true state number:  [0, 95]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  69.80708078887639
siam score:  -0.5490873
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.81715965
true state number:  [0, 35]
comparator state stnum:  [0, 35]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0002090339
true state number:  [0, 94]
comparator state stnum:  [0, 91]
main train batch thing paused
add a thread
Adding thread: now have 4 threads
printing an ep nov before normalisation:  64.72476464511897
line 256 mcts: sample exp_bonus 71.06153130531311
printing an ep nov before normalisation:  76.55261993408203
printing an ep nov before normalisation:  84.19744491577148
Training Flag: True
Self play flag: True
resampling flag: False
add more workers flag:  False
expV_train_flag:  False
expV_train_start_flag:  155000
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8438251
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.0544373e-07
true state number:  [0, 97]
comparator state stnum:  [0, 64]
ep length:  53
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6907568
true state number:  [0, 92]
comparator state stnum:  [0, 63]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.59444296
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7530584
true state number:  [0, 99]
comparator state stnum:  [0, 96]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
printing an ep nov before normalisation:  99.53587353013538
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.64488e-11
true state number:  [0, 99]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8864687
true state number:  [0, 95]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  95.70110592247433
line 256 mcts: sample exp_bonus 94.97653767466545
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8631831
true state number:  [0, 35]
comparator state stnum:  [0, 35]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15704410041313205, 0.18012626868485063, 0.1855820539127114, 0.1855820539127114, 0.1458327615382973, 0.1458327615382973]
printing an ep nov before normalisation:  99.9888563681452
printing an ep nov before normalisation:  70.60418832517081
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81] [0.    0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003 0.004
 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007 0.007
 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01  0.011 0.011
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.014 0.014 0.014 0.014
 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018
 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.022
 0.022 0.022 0.023 0.023 0.023 0.023 0.024 0.024 0.024]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9452466
true state number:  [0, 99]
comparator state stnum:  [0, 99]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
printing an ep nov before normalisation:  72.13827817278623
printing an ep nov before normalisation:  72.34395428857297
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.0717756e-08
true state number:  [0, 98]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15839577082093098, 0.17648830567800605, 0.18717934900264135, 0.18717934900264135, 0.14708793653525906, 0.14366928896052106]
printing an ep nov before normalisation:  74.15262222290039
printing an ep nov before normalisation:  98.96628676804596
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
using explorer policy with actor:  1
printing an ep nov before normalisation:  73.00165822766203
Printing some Q and Qe and total Qs values:  [[1.215]
 [1.215]
 [1.215]
 [1.228]
 [1.215]
 [1.215]
 [1.215]] [[70.174]
 [70.174]
 [70.174]
 [84.793]
 [70.174]
 [70.174]
 [70.174]] [[1.844]
 [1.844]
 [1.844]
 [2.091]
 [1.844]
 [1.844]
 [1.844]]
printing an ep nov before normalisation:  84.88274049356482
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.59109
true state number:  [0, 95]
comparator state stnum:  [0, 95]
using another actor
Printing some Q and Qe and total Qs values:  [[0.577]
 [0.379]
 [0.272]
 [0.41 ]
 [0.417]
 [0.426]
 [0.435]] [[94.415]
 [99.695]
 [99.74 ]
 [99.659]
 [99.514]
 [99.268]
 [98.959]] [[1.474]
 [1.376]
 [1.269]
 [1.406]
 [1.41 ]
 [1.415]
 [1.419]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.09359963
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.45333475
true state number:  [0, 93]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15893912768431998, 0.17709372671734966, 0.1878214443277763, 0.1878214443277763, 0.14416212847138885, 0.14416212847138885]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15893912768431998, 0.17709372671734966, 0.1878214443277763, 0.1878214443277763, 0.14416212847138885, 0.14416212847138885]
ep length:  39
ep length:  32
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.90656203
true state number:  [0, 94]
comparator state stnum:  [0, 94]
printing an ep nov before normalisation:  47.79547691345215
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18] [0.006 0.012 0.018 0.023 0.029 0.035 0.041 0.047 0.053 0.058 0.064 0.07
 0.076 0.082 0.088 0.094 0.099 0.105]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
probs:  [0.15893912768431998, 0.17709372671734966, 0.1878214443277763, 0.1878214443277763, 0.14416212847138885, 0.14416212847138885]
maxi score, test score, baseline:  -0.9870794871794872 -1.0 -0.9870794871794872
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
printing an ep nov before normalisation:  99.89779329005071
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5271822
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.45599505
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.66519946
true state number:  [0, 97]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6476286
true state number:  [0, 96]
comparator state stnum:  [0, 65]
printing an ep nov before normalisation:  99.12129729022608
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.70832646
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7161126
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.85496527
true state number:  [0, 99]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  31.171936968385886
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68] [0.    0.001 0.001 0.002 0.002 0.003 0.003 0.003 0.004 0.004 0.005 0.005
 0.006 0.006 0.006 0.007 0.007 0.008 0.008 0.009 0.009 0.009 0.01  0.01
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.014 0.014 0.014 0.015 0.015
 0.016 0.016 0.017 0.017 0.017 0.018 0.018 0.019 0.019 0.02  0.02  0.02
 0.021 0.021 0.022 0.022 0.023 0.023 0.023 0.024 0.024 0.025 0.025 0.026
 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31] [0.002 0.004 0.006 0.008 0.01  0.012 0.014 0.016 0.018 0.02  0.022 0.024
 0.026 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.046 0.048
 0.05  0.052 0.054 0.056 0.058 0.06  0.062]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.71149856
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  28.738487438330615
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.006
 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01
 0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013
 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016
 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019
 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022 0.022 0.022 0.022
 0.023 0.023]
printing an ep nov before normalisation:  89.3614788326122
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.18433075
true state number:  [0, 65]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  91.81128829357681
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0004826493
true state number:  [0, 95]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.48105356
true state number:  [0, 91]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0009016564
true state number:  [0, 99]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.41246146
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.28690248043767
printing an ep nov before normalisation:  99.9729061126709
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [34, 92, 13, 32, 19, 18, 21, 44, 18, 36, 4, 38, 15, 11, 38, 38, 30, 35, 21, 23] [35, 92, 16, 33, 21, 19, 22, 45, 20, 37, 7, 39, 15, 10, 39, 39, 33, 36, 22, 26] [48, 48, 3, 9, 33, 32, 9, 83, 2, 12, 59, 54, 0, 32, 68, 18, 17, 4, 6, 4]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7281673
true state number:  [0, 36]
comparator state stnum:  [0, 35]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00034228104
true state number:  [0, 65]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6257953
true state number:  [0, 36]
comparator state stnum:  [0, 35]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.70004153
true state number:  [0, 66]
comparator state stnum:  [0, 66]
printing an ep nov before normalisation:  98.48480355251503
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.21634938
true state number:  [0, 95]
comparator state stnum:  [0, 95]
siam score:  -0.56725204
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7839138
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9054702
true state number:  [0, 65]
comparator state stnum:  [0, 65]
145 136
printing an ep nov before normalisation:  50.66905445692805
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.025618829
true state number:  [0, 133]
comparator state stnum:  [0, 133]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18] [0.006 0.012 0.018 0.023 0.029 0.035 0.041 0.047 0.053 0.058 0.064 0.07
 0.076 0.082 0.088 0.094 0.099 0.105]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.015788257
true state number:  [0, 63]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  74.00665048630457
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  8.997721e-06
true state number:  [0, 98]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9872417721518988 -1.0 -0.9872417721518988
probs:  [0.16133513013493506, 0.18437016451638616, 0.17440906856765057, 0.18979017260613937, 0.14667647189219346, 0.14341899228269533]
Printing some Q and Qe and total Qs values:  [[0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]] [[51.267]
 [51.267]
 [51.267]
 [51.267]
 [51.267]
 [51.267]
 [51.267]] [[0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]
 [0.446]]
using explorer policy with actor:  1
printing an ep nov before normalisation:  53.039807081222534
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.31043223
true state number:  [0, 62]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  54.29615044759371
printing an ep nov before normalisation:  74.66566887366224
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  9.2202245e-06
true state number:  [0, 98]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  7.4870405e-07
true state number:  [0, 95]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  88.64230119895291
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.41606453
true state number:  [0, 91]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.08624478
true state number:  [0, 62]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.69580525
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00021652237
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.39348945
true state number:  [0, 91]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.58604914
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  98.93779486737017
ep length:  41
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.05212749
true state number:  [0, 39]
comparator state stnum:  [0, 39]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.009957447
true state number:  [0, 64]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5373002
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5803687
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  88.1966261859441
printing an ep nov before normalisation:  43.293836786595826
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.1061658e-09
true state number:  [0, 97]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.6656415167701276, 1: 0.6571881431874221, 2: 0.647612886134848, 3: 0.6384170451138401, 4: 0.628644450893247}
neg losses:  {0: 0.3357682602838449, 1: 0.341136128194933, 2: 0.347556512449492, 3: 0.35348899650379895, 4: 0.35904642329791053}
sample 1s:  [0.614 0.794 0.757 0.18  0.499 0.623 0.71  0.754 0.81  0.473]
neg positives:  [0.413 0.493 0.76  0.066 0.015 0.28  0.014 0.597 0.    0.   ]
printing an ep nov before normalisation:  98.24339085278133
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75] [0.    0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.004 0.004 0.004
 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007 0.007 0.008 0.008 0.008
 0.009 0.009 0.009 0.01  0.01  0.011 0.011 0.011 0.012 0.012 0.012 0.013
 0.013 0.013 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016 0.017
 0.017 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.021 0.021
 0.021 0.022 0.022 0.022 0.023 0.023 0.024 0.024 0.024 0.025 0.025 0.025
 0.026 0.026 0.026]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.61248636
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.84132344
true state number:  [0, 34]
comparator state stnum:  [0, 34]
maxi score, test score, baseline:  -0.9875543209876543 -1.0 -0.9875543209876543
printing an ep nov before normalisation:  99.40407262106913
printing an ep nov before normalisation:  98.70564371843304
printing an ep nov before normalisation:  57.3537287292149
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.258531
true state number:  [0, 91]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8102997
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7944014
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.034734562
true state number:  [0, 91]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6521725
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9875543209876543 -1.0 -0.9875543209876543
probs:  [0.1581807693675711, 0.17954405649267438, 0.17482164565449365, 0.19537802224422154, 0.14443395852185245, 0.1476415477191868]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.88527423
true state number:  [0, 95]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
maxi score, test score, baseline:  -0.9875543209876543 -1.0 -0.9875543209876543
printing an ep nov before normalisation:  6.630911885455362
printing an ep nov before normalisation:  96.70910624708345
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.31276032
true state number:  [0, 63]
comparator state stnum:  [0, 62]
maxi score, test score, baseline:  -0.9875543209876543 -1.0 -0.9875543209876543
probs:  [0.15964997166227574, 0.17192356153791816, 0.17644541043947062, 0.19719271716424078, 0.14577547875937563, 0.14901286043671896]
printing an ep nov before normalisation:  69.23301795973873
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
main train batch thing paused
add a thread
Adding thread: now have 5 threads
Printing some Q and Qe and total Qs values:  [[0.521]
 [0.218]
 [0.497]
 [0.489]
 [0.5  ]
 [0.503]
 [0.523]] [[64.433]
 [94.454]
 [71.08 ]
 [78.368]
 [75.046]
 [69.597]
 [64.75 ]] [[0.521]
 [0.218]
 [0.497]
 [0.489]
 [0.5  ]
 [0.503]
 [0.523]]
printing an ep nov before normalisation:  89.46530935496654
printing an ep nov before normalisation:  96.05203010375178
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.54951286
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.11029093
true state number:  [0, 91]
comparator state stnum:  [0, 99]
ep length:  44
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.15373978
true state number:  [0, 92]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.6357917e-05
true state number:  [0, 95]
comparator state stnum:  [0, 91]
Printing some Q and Qe and total Qs values:  [[0.695]
 [0.685]
 [0.685]
 [0.718]
 [0.685]
 [0.685]
 [0.685]] [[98.329]
 [99.634]
 [99.634]
 [98.515]
 [99.634]
 [99.634]
 [99.634]] [[0.695]
 [0.685]
 [0.685]
 [0.718]
 [0.685]
 [0.685]
 [0.685]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.7877937e-05
true state number:  [0, 98]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8221158
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0011982522
true state number:  [0, 34]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  89.91698326481456
using explorer policy with actor:  1
printing an ep nov before normalisation:  89.68180656433105
printing an ep nov before normalisation:  76.59460295834077
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  4.0856106e-05
true state number:  [0, 98]
comparator state stnum:  [0, 64]
maxi score, test score, baseline:  -0.9878518072289156 -1.0 -0.9878518072289156
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.103654936
true state number:  [0, 91]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  96.63338578167267
printing an ep nov before normalisation:  99.78533998600187
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8776819
true state number:  [0, 97]
comparator state stnum:  [0, 97]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.16152080334364058, 0.16536423894093774, 0.1780771413012284, 0.19290886072156752, 0.14778256546394003, 0.15434639022868585]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.59940636
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.15291984
true state number:  [0, 95]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  72.54822184591193
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5855
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7717895
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.15914404043972313, 0.16671769483457527, 0.1750487146689126, 0.194487760949033, 0.14899212071896395, 0.15560966838879217]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  8.8334474e-07
true state number:  [0, 98]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  54.47579912317524
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.30091557
true state number:  [0, 63]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  82.53028869628906
printing an ep nov before normalisation:  83.86131677534482
using explorer policy with actor:  1
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.15766806855001395, 0.16892303164609393, 0.17304070107148903, 0.1917371460300398, 0.15096298415234932, 0.15766806855001395]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81] [0.    0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003 0.004
 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007 0.007
 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01  0.011 0.011
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.014 0.014 0.014 0.014
 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018
 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.022
 0.022 0.022 0.023 0.023 0.023 0.023 0.024 0.024 0.024]
using explorer policy with actor:  1
Printing some Q and Qe and total Qs values:  [[-0.025]
 [-0.025]
 [-0.025]
 [-0.028]
 [-0.026]
 [-0.025]
 [-0.025]] [[77.381]
 [77.381]
 [77.381]
 [79.633]
 [79.239]
 [78.836]
 [77.381]] [[1.238]
 [1.238]
 [1.238]
 [1.305]
 [1.294]
 [1.284]
 [1.238]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8849022
true state number:  [0, 62]
comparator state stnum:  [0, 62]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.87756765
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9412601
true state number:  [0, 99]
comparator state stnum:  [0, 99]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16] [0.008 0.017 0.025 0.034 0.042 0.05  0.059 0.084 0.092 0.101 0.109 0.118
 0.126 0.134]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.77563274
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.622603
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  99.94140090597824
line 256 mcts: sample exp_bonus 91.76045783077221
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
printing an ep nov before normalisation:  99.75579914362574
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9124932
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5704526
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.96303711399736
using explorer policy with actor:  1
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.06767611
true state number:  [0, 36]
comparator state stnum:  [0, 36]
using explorer policy with actor:  1
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
options / WEIGHTS  [1, 2, 3, 4, 10, 11, 12, 13] [0.018 0.036 0.054 0.071 0.179 0.196 0.214 0.232]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
printing an ep nov before normalisation:  99.82002403291762
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00010223296
true state number:  [0, 99]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.54783475
true state number:  [0, 63]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.1574876167926883, 0.16846810220264044, 0.17668114820032826, 0.1857365578900866, 0.1541389581215681, 0.1574876167926883]
ep length:  53
printing an ep nov before normalisation:  99.96561057133995
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5798355
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  80.65567016601562
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.008
 0.009 0.01  0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016 0.017
 0.017 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024 0.025
 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031 0.032 0.033 0.034
 0.034 0.035 0.036 0.036 0.037]
printing an ep nov before normalisation:  81.3802779802392
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.1971208
true state number:  [0, 62]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.64826137
true state number:  [0, 62]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  99.92435455322266
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
printing an ep nov before normalisation:  41.92230315842331
ep length:  38
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6152921
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  86.35319209976667
printing an ep nov before normalisation:  85.31286169627481
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.15914017977270903, 0.1663692008761694, 0.17853511444052966, 0.187685545155604, 0.15575638266045094, 0.15251357709453695]
printing an ep nov before normalisation:  95.16939102018225
printing an ep nov before normalisation:  55.05026846337376
printing an ep nov before normalisation:  62.80897767808124
printing an ep nov before normalisation:  72.45236873626709
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.006
 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01
 0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013
 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016
 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019
 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022 0.022 0.022 0.022
 0.023 0.023]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.87054497
true state number:  [0, 101]
comparator state stnum:  [0, 101]
options / WEIGHTS  [1, 2, 3, 10, 11, 12] [0.026 0.051 0.077 0.256 0.282 0.308]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.48147336
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.80515075
true state number:  [0, 34]
comparator state stnum:  [0, 34]
Printing some Q and Qe and total Qs values:  [[1.263]
 [1.2  ]
 [1.129]
 [1.265]
 [1.2  ]
 [1.197]
 [1.188]] [[69.244]
 [76.349]
 [77.097]
 [73.16 ]
 [76.349]
 [72.026]
 [75.414]] [[1.637]
 [1.654]
 [1.591]
 [1.683]
 [1.654]
 [1.603]
 [1.632]]
ep length:  42
printing an ep nov before normalisation:  82.66006344922664
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7668135
true state number:  [0, 98]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.73149544
true state number:  [0, 35]
comparator state stnum:  [0, 35]
maxi score, test score, baseline:  -0.9879952380952381 -1.0 -0.9879952380952381
probs:  [0.15846729237414584, 0.15846729237414584, 0.1816424835749783, 0.19095217576676574, 0.15846729237414584, 0.15200346353581837]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.75967383
true state number:  [0, 35]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  96.55235290527344
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.11441956e-07
true state number:  [0, 35]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  82.2951602935791
maxi score, test score, baseline:  -0.9881352941176471 -1.0 -0.9881352941176471
probs:  [0.15922699692279538, 0.15922699692279538, 0.18251329852983786, 0.18707353259455034, 0.15922699692279538, 0.1527321781072257]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68] [0.    0.001 0.001 0.002 0.002 0.003 0.003 0.003 0.004 0.004 0.005 0.005
 0.006 0.006 0.006 0.007 0.007 0.008 0.008 0.009 0.009 0.009 0.01  0.01
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.014 0.014 0.014 0.015 0.015
 0.016 0.016 0.017 0.017 0.017 0.018 0.018 0.019 0.019 0.02  0.02  0.02
 0.021 0.021 0.022 0.022 0.023 0.023 0.023 0.024 0.024 0.025 0.025 0.026
 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5881956
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  68
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [10, 22, 34, 32, 33, 47, 41, 40, 27, 20, 44, 36, 21, 36, 44, 27, 29, 28, 12, 53] [11, 23, 37, 33, 33, 48, 40, 41, 28, 21, 45, 36, 21, 37, 44, 27, 30, 29, 13, 52] [35, 34, 10, 48, 20, 37, 3, 21, 12, 2, 22, 6, 9, 25, 0, 10, 41, 4, 1, 0]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.43719926
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.033994194
true state number:  [0, 94]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  57.62004375457764
printing an ep nov before normalisation:  85.07160945420053
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
ep length:  42
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.11102249
true state number:  [0, 63]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7560961
true state number:  [0, 93]
comparator state stnum:  [0, 93]
Training Flag: True
Self play flag: True
resampling flag: False
add more workers flag:  False
expV_train_flag:  False
expV_train_start_flag:  155000
ep length:  56
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  7.547764e-08
true state number:  [0, 36]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  59.981291064242605
using explorer policy with actor:  1
printing an ep nov before normalisation:  59.05094340738734
printing an ep nov before normalisation:  90.20743371984878
ep length:  88
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9512805
true state number:  [0, 96]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  77.4471984889864
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [62, 25, 5, 25, 16, 60, 32, 3, 46, 26, 37, 18, 29, 34, 88, 72, 17, 24, 25, 37] [63, 27, 5, 26, 17, 61, 35, 4, 48, 29, 38, 21, 29, 33, 91, 73, 18, 24, 27, 38] [0, 3, 21, 4, 26, 23, 1, 16, 6, 10, 1, 5, 9, 5, 68, 14, 33, 4, 37, 20]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6406758
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9881352941176471 -1.0 -0.9881352941176471
ep length:  44
ep length:  100
pos losses:  {0: 0.6755183794797158, 1: 0.6676440191932731, 2: 0.6583495644156728, 3: 0.6490421293783077, 4: 0.6389423500910713}
neg losses:  {0: 0.32647582086498944, 1: 0.33149994660834425, 2: 0.3376136433220795, 3: 0.34326419507406153, 4: 0.34845908041481627}
sample 1s:  [0.878 0.994 0.622 0.726 0.953 0.74  0.776 0.381 0.798 0.763]
neg positives:  [0.632 0.028 0.001 0.742 0.892 0.524 0.    0.    0.015 0.   ]
ep length:  88
ep length:  45
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.71984845
true state number:  [0, 35]
comparator state stnum:  [0, 35]
Printing some Q and Qe and total Qs values:  [[-0.015]
 [-0.022]
 [-0.014]
 [-0.015]
 [-0.015]
 [-0.014]
 [-0.013]] [[94.068]
 [93.956]
 [91.87 ]
 [94.068]
 [94.068]
 [93.037]
 [93.111]] [[1.931]
 [1.92 ]
 [1.846]
 [1.931]
 [1.931]
 [1.892]
 [1.896]]
siam score:  -0.57982916
printing an ep nov before normalisation:  70.65110683441162
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [20, 16, 50, 15, 7, 52, 29, 35, 50, 17, 27, 12, 13, 11, 40, 3, 20, 36, 33, 29] [21, 17, 51, 16, 8, 53, 30, 38, 49, 18, 26, 12, 15, 14, 40, 4, 21, 37, 35, 32] [5, 0, 5, 25, 30, 41, 7, 11, 13, 7, 16, 83, 3, 1, 56, 27, 4, 16, 15, 2]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9023629
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.45878658
true state number:  [0, 91]
comparator state stnum:  [0, 91]
Printing some Q and Qe and total Qs values:  [[1.063]
 [1.091]
 [0.441]
 [0.629]
 [0.722]
 [1.114]
 [1.039]] [[72.535]
 [75.285]
 [73.428]
 [73.571]
 [75.24 ]
 [42.739]
 [73.249]] [[1.763]
 [1.822]
 [1.151]
 [1.341]
 [1.451]
 [1.487]
 [1.747]]
maxi score, test score, baseline:  -0.9881352941176471 -1.0 -0.9881352941176471
maxi score, test score, baseline:  -0.9881352941176471 -1.0 -0.9881352941176471
printing an ep nov before normalisation:  78.99262628074223
printing an ep nov before normalisation:  92.08988030990409
printing an ep nov before normalisation:  92.59382247924805
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00089741295
true state number:  [0, 98]
comparator state stnum:  [0, 95]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.25965732
true state number:  [0, 64]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0010170329
true state number:  [0, 96]
comparator state stnum:  [0, 92]
Printing some Q and Qe and total Qs values:  [[0.967]
 [0.853]
 [0.853]
 [0.853]
 [0.853]
 [0.972]
 [0.853]] [[97.484]
 [85.312]
 [85.312]
 [85.312]
 [85.312]
 [97.221]
 [85.312]] [[1.602]
 [1.334]
 [1.334]
 [1.334]
 [1.334]
 [1.604]
 [1.334]]
printing an ep nov before normalisation:  81.75912857055664
maxi score, test score, baseline:  -0.9882720930232558 -1.0 -0.9882720930232558
ep length:  38
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8770068
true state number:  [0, 95]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7120635
true state number:  [0, 62]
comparator state stnum:  [0, 62]
pos losses:  {0: 0.6770880680143564, 1: 0.6694517939338857, 2: 0.6603245133053663, 3: 0.6510274777045617, 4: 0.6408879938977876}
neg losses:  {0: 0.32462929701643295, 1: 0.3295158833535009, 2: 0.33550089948317585, 3: 0.34099178636505595, 4: 0.3460655803054706}
sample 1s:  [0.245 0.766 0.409 0.876 0.526 0.468 0.275 0.99  0.386 0.964]
neg positives:  [0.    0.01  0.425 0.    0.    0.142 0.001 0.002 0.427 0.231]
printing an ep nov before normalisation:  77.00000118117737
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  6.751872e-09
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.0635716e-06
true state number:  [0, 97]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  97.68990556739503
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.4646411
true state number:  [0, 35]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.85330683
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.97572327
true state number:  [0, 98]
comparator state stnum:  [0, 98]
using explorer policy with actor:  1
printing an ep nov before normalisation:  99.92103030969876
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.07519834
true state number:  [0, 102]
comparator state stnum:  [0, 96]
using explorer policy with actor:  1
Printing some Q and Qe and total Qs values:  [[-0.007]
 [-0.007]
 [-0.007]
 [ 0.084]
 [-0.007]
 [-0.007]
 [-0.007]] [[99.939]
 [99.939]
 [99.939]
 [99.979]
 [99.939]
 [99.939]
 [99.939]] [[0.326]
 [0.326]
 [0.326]
 [0.417]
 [0.326]
 [0.326]
 [0.326]]
line 256 mcts: sample exp_bonus 99.77670669555664
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.007 0.007 0.008
 0.009 0.009 0.01  0.011 0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016
 0.017 0.018 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024
 0.025 0.026 0.026 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.032
 0.033 0.034 0.034 0.035 0.036 0.036]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8406887
true state number:  [0, 95]
comparator state stnum:  [0, 95]
ep length:  46
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.49119496
true state number:  [0, 35]
comparator state stnum:  [0, 35]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.006 0.006 0.006 0.006 0.007
 0.007 0.007 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01
 0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013
 0.014 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02
 0.02  0.021 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024]
Printing some Q and Qe and total Qs values:  [[1.237]
 [1.237]
 [1.237]
 [1.231]
 [1.237]
 [1.229]
 [1.237]] [[47.523]
 [47.523]
 [47.523]
 [47.439]
 [47.523]
 [47.433]
 [47.523]] [[1.694]
 [1.694]
 [1.694]
 [1.686]
 [1.694]
 [1.684]
 [1.694]]
printing an ep nov before normalisation:  99.99616764794902
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.66398275
true state number:  [0, 62]
comparator state stnum:  [0, 62]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
using explorer policy with actor:  1
printing an ep nov before normalisation:  47.41689114238
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
pos losses:  {0: 0.6792395280249286, 1: 0.6717534841675508, 2: 0.6627868551826268, 3: 0.6534806241591772, 4: 0.6433042515265314}
neg losses:  {0: 0.3227664155460763, 1: 0.3277469478678285, 2: 0.333694128483011, 3: 0.33900554416080314, 4: 0.344029820671207}
sample 1s:  [0.911 0.821 0.719 0.547 0.905 0.931 0.749 0.5   0.653 0.801]
neg positives:  [0.011 0.704 0.011 0.181 0.327 0.008 0.    0.958 0.022 0.   ]
printing an ep nov before normalisation:  47.534074783325195
printing an ep nov before normalisation:  74.19011765092287
Starting evaluation
printing an ep nov before normalisation:  97.35141964261476
using explorer policy with actor:  0
using explorer policy with actor:  0
printing an ep nov before normalisation:  94.42255225330231
printing an ep nov before normalisation:  44.66902857630255
maxi score, test score, baseline:  -0.9884057471264368 -1.0 -0.9884057471264368
printing an ep nov before normalisation:  52.351673444112144
printing an ep nov before normalisation:  53.9785106976827
Printing some Q and Qe and total Qs values:  [[0.733]
 [0.668]
 [0.769]
 [0.77 ]
 [0.773]
 [0.755]
 [0.734]] [[41.318]
 [53.484]
 [42.547]
 [42.539]
 [43.838]
 [41.725]
 [43.904]] [[0.733]
 [0.668]
 [0.769]
 [0.77 ]
 [0.773]
 [0.755]
 [0.734]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.76251954
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  51.22852802276611
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
ep length:  56
ep length:  42
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.800029
true state number:  [0, 93]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  94.34997560877831
printing an ep nov before normalisation:  37.36457282122085
printing an ep nov before normalisation:  37.20965409264654
printing an ep nov before normalisation:  46.52989159168286
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0466396
true state number:  [0, 92]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  93.39597100941756
maxi score, test score, baseline:  -0.9884057471264368 -1.0 -0.9884057471264368
printing an ep nov before normalisation:  48.809238742558335
using explorer policy with actor:  0
using explorer policy with actor:  0
printing an ep nov before normalisation:  46.82853371240518
printing an ep nov before normalisation:  46.549744606018066
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.004554613
true state number:  [0, 63]
comparator state stnum:  [0, 91]
Printing some Q and Qe and total Qs values:  [[0.071]
 [0.071]
 [0.071]
 [0.295]
 [0.071]
 [0.02 ]
 [0.071]] [[98.629]
 [98.629]
 [98.629]
 [96.938]
 [98.629]
 [98.699]
 [98.629]] [[0.071]
 [0.071]
 [0.071]
 [0.295]
 [0.071]
 [0.02 ]
 [0.071]]
printing an ep nov before normalisation:  44.669023811385074
using explorer policy with actor:  0
printing an ep nov before normalisation:  49.718082439621554
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.49279067
true state number:  [0, 64]
comparator state stnum:  [0, 64]
printing an ep nov before normalisation:  99.09146162443008
printing an ep nov before normalisation:  93.02072525024414
printing an ep nov before normalisation:  44.52522661442589
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00021922999
true state number:  [0, 98]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  95.07162931269093
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7344296
true state number:  [0, 93]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  49.08295569172168
printing an ep nov before normalisation:  96.00694912743529
printing an ep nov before normalisation:  77.97494775723477
printing an ep nov before normalisation:  76.72807382513176
printing an ep nov before normalisation:  48.09597495664752
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7191529
true state number:  [0, 62]
comparator state stnum:  [0, 62]
Printing some Q and Qe and total Qs values:  [[0.716]
 [0.666]
 [0.722]
 [0.723]
 [0.728]
 [0.719]
 [0.717]] [[66.623]
 [92.098]
 [79.611]
 [77.786]
 [78.796]
 [79.264]
 [79.384]] [[0.716]
 [0.666]
 [0.722]
 [0.723]
 [0.728]
 [0.719]
 [0.717]]
using explorer policy with actor:  0
using another actor
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.003417409
true state number:  [0, 63]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  81.79403083517334
printing an ep nov before normalisation:  59.104285386097935
printing an ep nov before normalisation:  94.05181115818795
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  5.395595e-07
true state number:  [0, 66]
comparator state stnum:  [0, 92]
Printing some Q and Qe and total Qs values:  [[0.253]
 [0.253]
 [0.253]
 [0.266]
 [0.253]
 [0.262]
 [0.253]] [[91.27 ]
 [91.27 ]
 [91.27 ]
 [98.123]
 [91.27 ]
 [97.601]
 [91.27 ]] [[0.253]
 [0.253]
 [0.253]
 [0.266]
 [0.253]
 [0.262]
 [0.253]]
line 256 mcts: sample exp_bonus 38.90065747229605
printing an ep nov before normalisation:  45.44133186340332
printing an ep nov before normalisation:  98.68845715449422
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.88382256
true state number:  [0, 98]
comparator state stnum:  [0, 98]
Printing some Q and Qe and total Qs values:  [[0.638]
 [0.636]
 [0.653]
 [0.654]
 [0.654]
 [0.658]
 [0.658]] [[94.768]
 [99.447]
 [95.997]
 [95.42 ]
 [95.656]
 [98.085]
 [97.516]] [[0.638]
 [0.636]
 [0.653]
 [0.654]
 [0.654]
 [0.658]
 [0.658]]
maxi score, test score, baseline:  -0.9885363636363637 -1.0 -0.9885363636363637
Printing some Q and Qe and total Qs values:  [[0.64 ]
 [0.639]
 [0.657]
 [0.654]
 [0.655]
 [0.66 ]
 [0.661]] [[91.695]
 [93.011]
 [92.19 ]
 [92.462]
 [91.953]
 [91.931]
 [90.617]] [[2.367]
 [2.417]
 [2.404]
 [2.411]
 [2.392]
 [2.396]
 [2.347]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6879768
true state number:  [0, 98]
comparator state stnum:  [0, 97]
using explorer policy with actor:  0
printing an ep nov before normalisation:  56.94776220414621
printing an ep nov before normalisation:  57.90158198308035
using explorer policy with actor:  0
printing an ep nov before normalisation:  51.86031515270338
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [17, 28, 28, 63, 21, 28, 40, 10, 12, 31, 14, 16, 12, 11, 21, 29, 31, 25, 23, 47] [18, 31, 27, 65, 22, 29, 41, 10, 12, 34, 14, 19, 13, 12, 22, 30, 32, 27, 22, 48] [33, 3, 14, 43, 11, 8, 29, 35, 2, 43, 36, 2, 2, 25, 10, 47, 11, 5, 2, 18]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.010810996
true state number:  [0, 91]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  97.84156190979928
using explorer policy with actor:  0
printing an ep nov before normalisation:  98.96394226923799
printing an ep nov before normalisation:  99.73820451400968
printing an ep nov before normalisation:  98.78601004791243
printing an ep nov before normalisation:  98.18609245204337
printing an ep nov before normalisation:  95.78272092667123
using explorer policy with actor:  0
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [15, 23, 8, 50, 91, 11, 29, 64, 36, 39, 56, 26, 62, 11, 10, 37, 16, 12, 50, 31] [14, 26, 8, 49, 94, 12, 32, 63, 37, 40, 57, 28, 64, 13, 11, 37, 16, 14, 51, 31] [5, 39, 37, 19, 72, 21, 8, 16, 24, 0, 38, 1, 39, 24, 41, 18, 40, 33, 15, 6]
printing an ep nov before normalisation:  47.117944094715085
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8935039
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.8775167e-07
true state number:  [0, 96]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  92.91479654133065
Printing some Q and Qe and total Qs values:  [[0.637]
 [0.622]
 [0.646]
 [0.652]
 [0.651]
 [0.652]
 [0.652]] [[94.467]
 [95.789]
 [91.151]
 [93.703]
 [94.09 ]
 [94.619]
 [94.607]] [[0.637]
 [0.622]
 [0.646]
 [0.652]
 [0.651]
 [0.652]
 [0.652]]
printing an ep nov before normalisation:  99.75414538974304
printing an ep nov before normalisation:  96.30038634094771
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46] [0.001 0.002 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.019 0.02  0.021 0.022
 0.023 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.031 0.032 0.033
 0.034 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.006 0.006 0.006 0.006 0.007
 0.007 0.007 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01
 0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013
 0.014 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02
 0.02  0.021 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.96334577
true state number:  [0, 100]
comparator state stnum:  [0, 100]
Printing some Q and Qe and total Qs values:  [[0.566]
 [0.518]
 [0.581]
 [0.582]
 [0.589]
 [0.587]
 [0.585]] [[96.04 ]
 [97.426]
 [95.511]
 [94.775]
 [97.209]
 [95.948]
 [96.263]] [[0.566]
 [0.518]
 [0.581]
 [0.582]
 [0.589]
 [0.587]
 [0.585]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7895151
true state number:  [0, 99]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  95.08848866349226
printing an ep nov before normalisation:  96.29636185926344
ep length:  94
maxi score, test score, baseline:  -0.9893736842105263 -1.0 -0.9893736842105263
probs:  [0.15493690461526455, 0.14387794356492326, 0.19180010811640208, 0.19647544124337565, 0.15797269784476994, 0.15493690461526455]
printing an ep nov before normalisation:  99.96306015765143
printing an ep nov before normalisation:  96.76694820724691
siam score:  -0.64269584
maxi score, test score, baseline:  -0.9895907216494846 -1.0 -0.9895907216494846
printing an ep nov before normalisation:  99.56427574157715
printing an ep nov before normalisation:  98.24372427612263
printing an ep nov before normalisation:  94.88512720370284
printing an ep nov before normalisation:  94.74240447880246
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0076207556
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  96.19443103261368
printing an ep nov before normalisation:  91.23861368637002
using explorer policy with actor:  1
maxi score, test score, baseline:  -0.9901912621359223 -1.0 -0.9901912621359223
in main func line 156:  196
maxi score, test score, baseline:  -0.9902846153846154 -1.0 -0.9902846153846154
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  3.013295e-09
true state number:  [0, 97]
comparator state stnum:  [0, 65]
printing an ep nov before normalisation:  99.08104663005993
UNIT TEST: sample policy line 217 mcts : [0.082 0.041 0.163 0.163 0.204 0.184 0.163]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47] [0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02  0.021
 0.022 0.023 0.024 0.025 0.026 0.027 0.027 0.028 0.029 0.03  0.031 0.032
 0.033 0.034 0.035 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042]
printing an ep nov before normalisation:  98.58296439299909
using explorer policy with actor:  0
using explorer policy with actor:  1
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6754255
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9291076
true state number:  [0, 96]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  99.35208908894137
maxi score, test score, baseline:  -0.9905542056074766 -1.0 -0.9905542056074766
Printing some Q and Qe and total Qs values:  [[0.509]
 [0.511]
 [0.48 ]
 [0.484]
 [0.486]
 [0.488]
 [0.5  ]] [[96.229]
 [87.783]
 [99.866]
 [99.881]
 [99.898]
 [99.921]
 [99.882]] [[0.509]
 [0.511]
 [0.48 ]
 [0.484]
 [0.486]
 [0.488]
 [0.5  ]]
Training Flag: True
Self play flag: True
resampling flag: False
add more workers flag:  False
expV_train_flag:  False
expV_train_start_flag:  155000
printing an ep nov before normalisation:  99.99996185302734
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007
 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01  0.01  0.01
 0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017
 0.017 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021
 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024 0.024]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9006607
true state number:  [0, 96]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  99.76974039391364
printing an ep nov before normalisation:  99.3285083770752
rdn probs:  [0.15630770083100595, 0.14515085778244777, 0.19349717765953328, 0.1982138917938831, 0.15630770083100595, 0.15052267110212392]
Training Flag: True
Self play flag: True
resampling flag: False
add more workers flag:  False
expV_train_flag:  False
expV_train_start_flag:  155000
printing an ep nov before normalisation:  99.73808280549325
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7561416
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6060338
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.10960552434466
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92] [0.    0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003
 0.003 0.003 0.004 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006
 0.006 0.006 0.006 0.007 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008
 0.009 0.009 0.009 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011
 0.011 0.012 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014 0.014 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.019 0.02
 0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.006
 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01
 0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013
 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016
 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019
 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022 0.022 0.022 0.022
 0.023 0.023]
Printing some Q and Qe and total Qs values:  [[0.751]
 [0.821]
 [0.751]
 [0.751]
 [0.751]
 [0.751]
 [0.751]] [[78.177]
 [92.124]
 [78.177]
 [78.177]
 [78.177]
 [78.177]
 [78.177]] [[1.85 ]
 [2.284]
 [1.85 ]
 [1.85 ]
 [1.85 ]
 [1.85 ]
 [1.85 ]]
maxi score, test score, baseline:  -0.9912793103448276 -1.0 -0.9912793103448276
from probs:  [0.15903716678152396, 0.1425968094430849, 0.19230021534999367, 0.1968760844652329, 0.1560386110405508, 0.1531511129196137]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00023555769
true state number:  [0, 93]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9912793103448276 -1.0 -0.9912793103448276
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
printing an ep nov before normalisation:  48.91907495826474
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7557204
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8515288
true state number:  [0, 99]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7645393
true state number:  [0, 64]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8220968
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.22750425
true state number:  [0, 35]
comparator state stnum:  [0, 36]
maxi score, test score, baseline:  -0.9912793103448276 -1.0 -0.9912793103448276
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  4.2833256e-10
true state number:  [0, 96]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.6832450883296447, 1: 0.676292513686467, 2: 0.667911536385858, 3: 0.6586683279857403, 4: 0.6482559139651012}
neg losses:  {0: 0.3169773954867832, 1: 0.32188000705668596, 2: 0.327873053740922, 3: 0.3329421505331993, 4: 0.33772422479299025}
sample 1s:  [0.712 0.714 0.855 0.721 0.787 0.68  0.805 0.716 0.545 0.767]
neg positives:  [0.329 0.6   0.001 0.024 0.022 0.236 0.453 0.675 0.038 0.355]
printing an ep nov before normalisation:  99.98370170593262
maxi score, test score, baseline:  -0.9912793103448276 -1.0 -0.9912793103448276
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9506637
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9912793103448276 -1.0 -0.9912793103448276
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.65189236
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.002443403
true state number:  [0, 71]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.77423316
true state number:  [0, 92]
comparator state stnum:  [0, 92]
205 163
maxi score, test score, baseline:  -0.9914254237288136 -1.0 -0.9914254237288136
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.8178944e-11
true state number:  [0, 66]
comparator state stnum:  [0, 91]
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861, 451007, 904523, 185455, 734543, 551914, 765814, 306245, 359144, 733219, 615275, 734570, 521900, 819923, 375057, 852950, 634105, 83558, 321059, 323589, 462414, 660263, 122616, 902553, 417580, 398727, 366802, 235878, 280686, 569314, 741821, 968777, 754411, 395469, 90484, 828925, 402710, 264044, 454681, 983614, 634246, 806962, 489663, 745937, 685862, 453358, 982603, 570841, 154408, 97628, 906272, 39110, 427462, 305529, 856158, 711079, 38000, 774517, 476513, 612607, 593592, 381312, 309048, 344726, 98051, 849618, 431447, 94782, 98033, 96657, 173123, 676241, 818637, 427910, 905980, 147768, 393173, 634624, 570279, 574069, 189011, 281060, 480801, 920021, 903787, 719477, 802347, 84017, 440651, 600761, 951155, 508923, 689023, 325965, 939402, 173503, 251521, 812274, 131807, 523848, 335797, 678599, 637190, 365509, 906955, 133890, 109122, 586707, 899955, 989071, 735269, 21309, 453365, 797990, 520956, 664496]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.62712425
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  46
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.95541406
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.956339e-06
true state number:  [0, 36]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  7.8497936e-07
true state number:  [0, 98]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.579477
true state number:  [0, 91]
comparator state stnum:  [0, 91]
ep length:  35
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
printing an ep nov before normalisation:  96.85633182224105
Printing some Q and Qe and total Qs values:  [[0.755]
 [0.755]
 [0.755]
 [0.804]
 [0.755]
 [0.755]
 [0.755]] [[90.492]
 [90.492]
 [90.492]
 [97.239]
 [90.492]
 [90.492]
 [90.492]] [[1.911]
 [1.911]
 [1.911]
 [2.086]
 [1.911]
 [1.911]
 [1.911]]
ep length:  34
ep length:  48
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9061989
true state number:  [0, 95]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9914966386554622 -1.0 -0.9914966386554622
probs:  [0.166598928148874, 0.1493768704888635, 0.18831369650280028, 0.19686799918768036, 0.146847076708297, 0.15199542896348497]
printing an ep nov before normalisation:  73.88682385696542
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5891153
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.37646169345527
STARTED EXPV TRAINING ON FRAME NO.  11155
ep length:  48
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.97777224
true state number:  [0, 98]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.4708925e-06
true state number:  [0, 64]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8522481
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.011109904
true state number:  [0, 62]
comparator state stnum:  [0, 96]
ep length:  28
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.2584712e-09
true state number:  [0, 97]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7034282
true state number:  [0, 93]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  73.63512852974793
maxi score, test score, baseline:  -0.9914966386554622 -1.0 -0.9914966386554622
maxi score, test score, baseline:  -0.9914966386554622 -1.0 -0.9914966386554622
probs:  [0.16896472779019878, 0.1489323888124399, 0.1909878582191635, 0.19522935000548264, 0.14173182457158648, 0.1541538506011289]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [13, 21, 19, 29, 76, 23, 26, 52, 14, 9, 22, 4, 12, 39, 32, 31, 23, 76, 33, 14] [14, 24, 22, 31, 77, 24, 28, 53, 15, 11, 22, 5, 11, 41, 33, 32, 22, 77, 34, 15] [24, 11, 5, 2, 47, 12, 1, 7, 0, 21, 9, 16, 0, 20, 3, 19, 46, 63, 12, 29]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9491054
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9915666666666667 -1.0 -0.9915666666666667
probs:  [0.16896472815878913, 0.14893238596800532, 0.19098786212008567, 0.19522935458670573, 0.1417318205722397, 0.15415384859417453]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.84771246
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  61.670447009845475
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.1043644e-06
true state number:  [0, 64]
comparator state stnum:  [0, 91]
from probs:  [0.17024751175879707, 0.1451469699810676, 0.19243784579418113, 0.1967115397565514, 0.142807851392462, 0.15264828131694078]
using explorer policy with actor:  1
using explorer policy with actor:  1
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.9625046e-07
true state number:  [0, 98]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9915666666666667 -1.0 -0.9915666666666667
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00011803169
true state number:  [0, 63]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6347082
true state number:  [0, 36]
comparator state stnum:  [0, 36]
printing an ep nov before normalisation:  59.14390563964844
rdn beta is 0 so we're just using the maxi policy
printing an ep nov before normalisation:  99.5628481630329
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
Printing some Q and Qe and total Qs values:  [[0.573]
 [0.573]
 [0.573]
 [0.573]
 [0.563]
 [0.573]
 [0.573]] [[49.951]
 [49.951]
 [49.951]
 [49.951]
 [58.434]
 [49.951]
 [49.951]] [[0.573]
 [0.573]
 [0.573]
 [0.573]
 [0.563]
 [0.573]
 [0.573]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.972226
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.43556422
true state number:  [0, 99]
comparator state stnum:  [0, 99]
using explorer policy with actor:  1
in main func line 156:  221
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9466926
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  99.62163670888572
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9339109
true state number:  [0, 100]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.2535374
true state number:  [0, 96]
comparator state stnum:  [0, 97]
maxi score, test score, baseline:  -0.9917032786885246 -1.0 -0.9917032786885246
probs:  [0.1712622025722521, 0.1488179320114151, 0.19730487520670156, 0.1890890320541669, 0.13966757555199694, 0.1538583826034675]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27] [0.003 0.005 0.008 0.011 0.013 0.016 0.019 0.021 0.024 0.026 0.029 0.032
 0.034 0.037 0.04  0.042 0.045 0.048 0.05  0.053 0.056 0.058 0.061 0.063
 0.066 0.069 0.071]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9365874
true state number:  [0, 99]
comparator state stnum:  [0, 99]
using explorer policy with actor:  1
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.81394774
true state number:  [0, 97]
comparator state stnum:  [0, 97]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5043411
true state number:  [0, 63]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  99.81400731137263
ep length:  27
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6716282
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7461499
true state number:  [0, 100]
comparator state stnum:  [0, 132]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.4141148e-05
true state number:  [0, 95]
comparator state stnum:  [0, 91]
siam score:  -0.84075
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8525788
true state number:  [0, 95]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  77.56969949941978
printing an ep nov before normalisation:  67.4433096455922
ep length:  42
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9778652
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.90506566
true state number:  [0, 100]
comparator state stnum:  [0, 100]
printing an ep nov before normalisation:  94.01051608588172
printing an ep nov before normalisation:  87.62912061361259
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00015398998
true state number:  [0, 95]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7679209
true state number:  [0, 63]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  66.27610524495444
maxi score, test score, baseline:  -0.991769918699187 -1.0 -0.991769918699187
Printing some Q and Qe and total Qs values:  [[0.664]
 [0.664]
 [0.664]
 [0.664]
 [0.664]
 [0.664]
 [0.697]] [[54.78 ]
 [54.78 ]
 [54.78 ]
 [54.78 ]
 [54.78 ]
 [54.78 ]
 [55.074]] [[1.654]
 [1.654]
 [1.654]
 [1.654]
 [1.654]
 [1.654]
 [1.697]]
ep length:  44
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7540669
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.76350224
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.991769918699187 -1.0 -0.991769918699187
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7520604
true state number:  [0, 34]
comparator state stnum:  [0, 34]
printing an ep nov before normalisation:  82.27889024523309
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.01363463
true state number:  [0, 95]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  99.77899883809268
printing an ep nov before normalisation:  78.81901264190674
printing an ep nov before normalisation:  2.1034777974477947
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6352171
true state number:  [0, 95]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.66017455
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9503069
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.77686983
true state number:  [0, 92]
comparator state stnum:  [0, 92]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31] [0.002 0.004 0.006 0.008 0.01  0.012 0.014 0.016 0.018 0.02  0.022 0.024
 0.026 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.046 0.048
 0.05  0.052 0.054 0.056 0.058 0.06  0.062]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5307295
true state number:  [0, 91]
comparator state stnum:  [0, 91]
using explorer policy with actor:  1
printing an ep nov before normalisation:  98.12688631961271
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861, 451007, 904523, 185455, 734543, 551914, 765814, 306245, 359144, 733219, 615275, 734570, 521900, 819923, 375057, 852950, 634105, 83558, 321059, 323589, 462414, 660263, 122616, 902553, 417580, 398727, 366802, 235878, 280686, 569314, 741821, 968777, 754411, 395469, 90484, 828925, 402710, 264044, 454681, 983614, 634246, 806962, 489663, 745937, 685862, 453358, 982603, 570841, 154408, 97628, 906272, 39110, 427462, 305529, 856158, 711079, 38000, 774517, 476513, 612607, 593592, 381312, 309048, 344726, 98051, 849618, 431447, 94782, 98033, 96657, 173123, 676241, 818637, 427910, 905980, 147768, 393173, 634624, 570279, 574069, 189011, 281060, 480801, 920021, 903787, 719477, 802347, 84017, 440651, 600761, 951155, 508923, 689023, 325965, 939402, 173503, 251521, 812274, 131807, 523848, 335797, 678599, 637190, 365509, 906955, 133890, 109122, 586707, 899955, 989071, 735269, 21309, 453365, 797990, 520956, 664496, 506180, 354284, 167262, 990197, 659158, 43259, 484095, 920115, 460395, 376489, 736957, 770835, 852168, 879849, 932689, 770158, 313730, 311439, 611898, 153665, 333383, 571435]
printing an ep nov before normalisation:  83.14380485449567
maxi score, test score, baseline:  -0.991769918699187 -1.0 -0.991769918699187
probs:  [0.1785110391626563, 0.14557913427339655, 0.1930727658143698, 0.1930727658143698, 0.13714729389112232, 0.15261700104408513]
Printing some Q and Qe and total Qs values:  [[0.757]
 [0.74 ]
 [0.713]
 [0.751]
 [0.747]
 [0.729]
 [0.768]] [[90.829]
 [94.932]
 [93.997]
 [89.581]
 [91.297]
 [92.605]
 [95.532]] [[1.043]
 [1.048]
 [1.016]
 [1.031]
 [1.035]
 [1.024]
 [1.079]]
printing an ep nov before normalisation:  95.41103581285478
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00050922664
true state number:  [0, 36]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  84.934040330428
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.90763956
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9327156
true state number:  [0, 99]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  37.85862388962643
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.69986534
true state number:  [0, 95]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9918354838709678 -1.0 -0.9918354838709678
probs:  [0.1762163103271786, 0.14641719153050958, 0.1941842391006804, 0.1941842391006804, 0.1379368098966749, 0.15106121004427617]
printing an ep nov before normalisation:  74.60101402759473
printing an ep nov before normalisation:  48.891401290893555
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26] [0.003 0.006 0.009 0.011 0.014 0.017 0.02  0.023 0.026 0.028 0.031 0.034
 0.037 0.04  0.043 0.046 0.048 0.051 0.054 0.057 0.06  0.063 0.066 0.068
 0.071 0.074]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.93674713
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  56.06551170349121
printing an ep nov before normalisation:  47.97242948739635
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8244038
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00019609195
true state number:  [0, 97]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  62.862049350178495
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9013709
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9919 -1.0 -0.9919
printing an ep nov before normalisation:  37.29187763665493
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007
 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01  0.01  0.01
 0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017
 0.017 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021
 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024 0.024]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [53, 14, 42, 13, 49, 24, 11, 27, 66, 4, 11, 28, 38, 7, 25, 13, 64, 36, 29, 25] [56, 13, 42, 14, 50, 25, 12, 26, 65, 5, 12, 28, 39, 9, 26, 15, 65, 37, 30, 26] [29, 25, 5, 27, 3, 11, 0, 77, 82, 25, 0, 12, 20, 31, 7, 23, 39, 11, 10, 5]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8307722
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.71014345
true state number:  [0, 100]
comparator state stnum:  [0, 100]
printing an ep nov before normalisation:  86.0603516546486
printing an ep nov before normalisation:  89.89385113167397
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.65554774
true state number:  [0, 36]
comparator state stnum:  [0, 37]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [17, 51, 82, 8, 60, 13, 41, 18, 9, 31, 66, 31, 40, 19, 6, 48, 29, 36, 34, 77] [18, 51, 83, 9, 59, 12, 42, 19, 9, 32, 69, 32, 41, 21, 8, 49, 30, 39, 36, 76] [40, 23, 66, 30, 73, 30, 28, 46, 22, 11, 29, 0, 11, 8, 16, 14, 12, 9, 50, 6]
printing an ep nov before normalisation:  91.13122315607534
printing an ep nov before normalisation:  47.25753365555825
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31] [0.002 0.004 0.006 0.008 0.01  0.012 0.014 0.016 0.018 0.02  0.022 0.024
 0.026 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.046 0.048
 0.05  0.052 0.054 0.056 0.058 0.06  0.062]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6579082
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.09380242
true state number:  [0, 36]
comparator state stnum:  [0, 35]
siam score:  -0.8259988
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8040046
true state number:  [0, 42]
comparator state stnum:  [0, 99]
maxi score, test score, baseline:  -0.9919 -1.0 -0.9919
printing an ep nov before normalisation:  95.11646339715952
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
in main func line 156:  238
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81] [0.    0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003 0.004
 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007 0.007
 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01  0.011 0.011
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.014 0.014 0.014 0.014
 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018
 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.022
 0.022 0.022 0.023 0.023 0.023 0.023 0.024 0.024 0.024]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39] [0.001 0.003 0.004 0.005 0.006 0.008 0.009 0.01  0.012 0.013 0.014 0.015
 0.017 0.018 0.019 0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029 0.031
 0.032 0.033 0.035 0.036 0.037 0.038 0.04  0.041 0.042 0.044 0.045 0.046
 0.047 0.049 0.05 ]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  8.4887826e-05
true state number:  [0, 97]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.66119796
true state number:  [0, 98]
comparator state stnum:  [0, 98]
from probs:  [0.1733509495807525, 0.1493669552108327, 0.190333080670565, 0.19413707803468302, 0.138707402157535, 0.15410453434563168]
maxi score, test score, baseline:  -0.9919634920634921 -1.0 -0.9919634920634921
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62] [0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006 0.006
 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011 0.012 0.012
 0.013 0.013 0.014 0.014 0.015 0.015 0.016 0.016 0.017 0.017 0.018 0.018
 0.019 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.023 0.024 0.024 0.025
 0.025 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029 0.03  0.03  0.031
 0.031 0.032]
ep length:  46
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.51493376
true state number:  [0, 66]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.74460113
true state number:  [0, 35]
comparator state stnum:  [0, 35]
ep length:  50
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.008 0.009
 0.01  0.011 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.017 0.018
 0.019 0.02  0.02  0.021 0.022 0.023 0.023 0.024 0.025 0.026 0.026 0.027
 0.028 0.029 0.029 0.03  0.031 0.032 0.032 0.033 0.034 0.035 0.035 0.036
 0.037 0.038 0.038]
ep length:  37
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.67035544
true state number:  [0, 62]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  68.18887799617691
printing an ep nov before normalisation:  99.70836092709811
maxi score, test score, baseline:  -0.9919634920634921 -1.0 -0.9919634920634921
probs:  [0.1744087599531061, 0.14800349305998892, 0.19149452088394664, 0.19149452088394664, 0.13955380765419143, 0.15504489756482018]
Printing some Q and Qe and total Qs values:  [[-0.077]
 [-0.077]
 [-0.077]
 [-0.077]
 [-0.077]
 [-0.077]
 [-0.077]] [[66.024]
 [66.024]
 [66.024]
 [66.024]
 [66.024]
 [66.024]
 [66.024]] [[109.984]
 [109.984]
 [109.984]
 [109.984]
 [109.984]
 [109.984]
 [109.984]]
rdn beta is 0 so we're just using the maxi policy
ep length:  48
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.3674006e-07
true state number:  [0, 97]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9919634920634921 -1.0 -0.9919634920634921
maxi score, test score, baseline:  -0.9920259842519685 -1.0 -0.9920259842519685
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [12, 29, 31, 26, 16, 24, 28, 14, 16, 10, 31, 14, 41, 76, 47, 50, 33, 19, 78, 28] [11, 30, 30, 29, 17, 26, 31, 15, 17, 11, 32, 15, 44, 77, 48, 49, 34, 19, 81, 29] [1, 11, 7, 84, 4, 6, 14, 0, 2, 34, 51, 34, 21, 55, 72, 24, 9, 3, 65, 49]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.77746516
true state number:  [0, 35]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  90.00476456101418
line 256 mcts: sample exp_bonus 31.65055189065704
printing an ep nov before normalisation:  87.40849178772238
printing an ep nov before normalisation:  93.17071834792945
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.9525064
true state number:  [0, 98]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  98.9330543353383
ep length:  100
printing an ep nov before normalisation:  75.93286514282227
printing an ep nov before normalisation:  77.96436768949988
printing an ep nov before normalisation:  79.56921871378643
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.01  0.01  0.011 0.012 0.012 0.013 0.014 0.014 0.015 0.016
 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023 0.023
 0.024 0.025 0.025 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031
 0.032 0.032 0.033 0.034 0.034 0.035 0.036]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9169789
true state number:  [0, 99]
comparator state stnum:  [0, 99]
pos losses:  {0: 0.70175344, 1: 0.69506836, 2: 0.68700206, 3: 0.677376, 4: 0.66658986}
neg losses:  {0: 0.3010481, 1: 0.30537793, 2: 0.3112426, 3: 0.31610405, 4: 0.32037285}
sample 1s:  [0.622 0.857 0.885 0.828 0.782 0.897 0.721 0.603 0.642 0.87 ]
neg positives:  [0.037 0.542 0.009 0.    0.889 0.025 0.868 0.    0.736 0.072]
ep length:  53
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32] [0.002 0.004 0.006 0.008 0.009 0.011 0.013 0.015 0.017 0.019 0.021 0.023
 0.025 0.027 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.045
 0.047 0.049 0.051 0.053 0.055 0.057 0.059 0.061]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8436586
true state number:  [0, 92]
comparator state stnum:  [0, 92]
using explorer policy with actor:  0
printing an ep nov before normalisation:  99.98067406510515
maxi score, test score, baseline:  -0.9920875 -1.0 -0.9920875
probs:  [0.17135381514655743, 0.15060017646418242, 0.19110968273843365, 0.19110968273843365, 0.1380615197602475, 0.15776512315214522]
printing an ep nov before normalisation:  98.79973325878382
printing an ep nov before normalisation:  97.26627934724092
printing an ep nov before normalisation:  91.17627743055158
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92] [0.    0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003
 0.003 0.003 0.004 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006
 0.006 0.006 0.006 0.007 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008
 0.009 0.009 0.009 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011
 0.011 0.012 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014 0.014 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.019 0.02
 0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022]
ep length:  46
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0030300065
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.99988555908203
printing an ep nov before normalisation:  96.34163840734116
printing an ep nov before normalisation:  97.93847871154321
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.011699888
true state number:  [0, 101]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  93.62935350495697
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7185528
true state number:  [0, 62]
comparator state stnum:  [0, 62]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.83386725
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.70771426
true state number:  [0, 64]
comparator state stnum:  [0, 64]
maxi score, test score, baseline:  -0.9922076923076923 -1.0 -0.9922076923076923
printing an ep nov before normalisation:  97.17184866699739
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.75245434
true state number:  [0, 95]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  72.80716896057129
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006
 0.006 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008 0.009 0.009 0.009
 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012
 0.013 0.013 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.015
 0.016 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018
 0.019 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021
 0.022 0.022 0.022 0.022]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.06959372
true state number:  [0, 91]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9922076923076923 -1.0 -0.9922076923076923
probs:  [0.1732481561279673, 0.15226507665357944, 0.18957932647359932, 0.18957932647359932, 0.13581887922770786, 0.15950923504354667]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.091386855
true state number:  [0, 91]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.021837894
true state number:  [0, 97]
comparator state stnum:  [0, 99]
using explorer policy with actor:  0
printing an ep nov before normalisation:  88.62291589580948
printing an ep nov before normalisation:  92.57803686108183
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5335743
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.34552512449889
from probs:  [0.1694722782901427, 0.1540783794378235, 0.1882870435540884, 0.1918369992642668, 0.1374363266245054, 0.15888897282917322]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
printing an ep nov before normalisation:  62.14687302057709
maxi score, test score, baseline:  -0.9922076923076923 -1.0 -0.9922076923076923
probs:  [0.1703669590503265, 0.15489179248114915, 0.18584212561950383, 0.19284974821686715, 0.1363215925981363, 0.15972778203401708]
Printing some Q and Qe and total Qs values:  [[0.307]
 [0.306]
 [0.298]
 [0.326]
 [0.326]
 [0.326]
 [0.3  ]] [[57.815]
 [56.455]
 [60.043]
 [54.203]
 [54.203]
 [54.203]
 [61.524]] [[1.352]
 [1.304]
 [1.42 ]
 [1.247]
 [1.247]
 [1.247]
 [1.472]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5606203
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0036127383
true state number:  [0, 133]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  99.53813436441123
ep length:  42
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.76815027
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.1685742e-08
true state number:  [0, 35]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.56209720112383
using explorer policy with actor:  1
printing an ep nov before normalisation:  98.19466488384634
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.5348244e-10
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7356638
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.066106625
true state number:  [0, 92]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  42.258524894714355
printing an ep nov before normalisation:  99.53812487171501
using explorer policy with actor:  1
printing an ep nov before normalisation:  56.362700092117215
Printing some Q and Qe and total Qs values:  [[0.492]
 [0.492]
 [0.456]
 [0.472]
 [0.492]
 [0.467]
 [0.451]] [[72.783]
 [72.783]
 [75.884]
 [79.539]
 [72.783]
 [83.658]
 [80.08 ]] [[1.337]
 [1.337]
 [1.375]
 [1.478]
 [1.337]
 [1.57 ]
 [1.469]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.4528336
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6366217
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  68.38486633648091
printing an ep nov before normalisation:  43.99438652035033
ep length:  48
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006
 0.006 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008 0.009 0.009 0.009
 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012
 0.013 0.013 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.015
 0.016 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018
 0.019 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021
 0.022 0.022 0.022 0.022]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.82094324
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.9133634
true state number:  [0, 96]
comparator state stnum:  [0, 97]
from probs:  [0.1727397068445257, 0.15022696253905246, 0.18843040742106765, 0.18843040742106765, 0.13822016557613342, 0.16195235019815313]
Printing some Q and Qe and total Qs values:  [[-0.029]
 [-0.044]
 [-0.04 ]
 [-0.04 ]
 [-0.041]
 [-0.04 ]
 [-0.04 ]] [[71.807]
 [76.964]
 [52.425]
 [52.425]
 [66.798]
 [69.498]
 [52.425]] [[0.235]
 [0.251]
 [0.106]
 [0.106]
 [0.192]
 [0.209]
 [0.106]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  9.612709e-06
true state number:  [0, 95]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9924373134328358 -1.0 -0.9924373134328358
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00070958684
true state number:  [0, 91]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.925844
true state number:  [0, 98]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  73.76102731522212
using explorer policy with actor:  1
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23] [0.004 0.007 0.011 0.014 0.018 0.022 0.025 0.029 0.033 0.036 0.04  0.043
 0.047 0.051 0.054 0.058 0.062 0.065 0.069 0.072 0.076 0.08  0.083]
options / WEIGHTS  [1, 2, 3, 4, 5, 10, 11, 12, 13, 14] [0.013 0.027 0.04  0.053 0.067 0.133 0.147 0.16  0.173 0.187]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.84199566
true state number:  [0, 72]
comparator state stnum:  [0, 71]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.796697
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.7214218e-10
true state number:  [0, 96]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006
 0.006 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008 0.009 0.009 0.009
 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012
 0.013 0.013 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.015
 0.016 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018
 0.019 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021
 0.022 0.022 0.022 0.022]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27] [0.003 0.005 0.008 0.011 0.013 0.016 0.019 0.021 0.024 0.026 0.029 0.032
 0.034 0.037 0.04  0.042 0.045 0.048 0.05  0.053 0.056 0.058 0.061 0.063
 0.066 0.069 0.071]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.63860637
true state number:  [0, 35]
comparator state stnum:  [0, 35]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00118744
true state number:  [0, 92]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  96.78558598221174
using explorer policy with actor:  1
maxi score, test score, baseline:  -0.9924925925925926 -1.0 -0.9924925925925926
printing an ep nov before normalisation:  95.77694107518668
printing an ep nov before normalisation:  94.969487455212
line 256 mcts: sample exp_bonus 61.96634078627785
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.94867665
true state number:  [0, 98]
comparator state stnum:  [0, 98]
266 198
pos losses:  {0: 0.7057049, 1: 0.6996892, 2: 0.692527, 3: 0.68349344, 4: 0.67276144}
neg losses:  {0: 0.29574192, 1: 0.2999827, 2: 0.30535993, 3: 0.30975467, 4: 0.31383428}
sample 1s:  [0.942 0.727 0.799 0.776 0.773 0.845 0.814 0.889 0.771 0.551]
neg positives:  [0.451 0.487 0.    0.004 0.733 0.082 0.    0.552 0.002 0.001]
using explorer policy with actor:  1
using another actor
from probs:  [0.17378060916348562, 0.14932491548061588, 0.1892837721231619, 0.1892837721231619, 0.13770052082096615, 0.16062641028860872]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5800237
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7254395
true state number:  [0, 96]
comparator state stnum:  [0, 95]
Printing some Q and Qe and total Qs values:  [[0.279]
 [0.133]
 [0.26 ]
 [0.204]
 [0.187]
 [0.303]
 [0.253]] [[62.47 ]
 [80.51 ]
 [52.507]
 [59.679]
 [56.747]
 [56.556]
 [58.831]] [[1.254]
 [1.517]
 [1.009]
 [1.116]
 [1.032]
 [1.144]
 [1.145]]
printing an ep nov before normalisation:  97.65684095389538
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.572289
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.69388735
true state number:  [0, 62]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  41.88854098320007
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007
 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01  0.01  0.01
 0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017
 0.017 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021
 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024 0.024]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.021588022
true state number:  [0, 97]
comparator state stnum:  [0, 100]
maxi score, test score, baseline:  -0.9924925925925926 -1.0 -0.9924925925925926
probs:  [0.1752527271022126, 0.15058986608607214, 0.18754088943306152, 0.18754088943306152, 0.13708853063236448, 0.16198709731322794]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24] [0.003 0.007 0.01  0.013 0.017 0.02  0.023 0.027 0.03  0.033 0.037 0.04
 0.043 0.047 0.05  0.053 0.057 0.06  0.063 0.067 0.07  0.073 0.077 0.08 ]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7098606
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  99.96801165851718
line 256 mcts: sample exp_bonus 97.97781638571472
printing an ep nov before normalisation:  82.62472628411474
printing an ep nov before normalisation:  91.49991989135742
printing an ep nov before normalisation:  99.96544225259926
printing an ep nov before normalisation:  95.30265242102007
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.71016824
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.6231876491051
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92] [0.    0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003
 0.003 0.003 0.004 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006
 0.006 0.006 0.006 0.007 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008
 0.009 0.009 0.009 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011
 0.011 0.012 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014 0.014 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.019 0.02
 0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46] [0.001 0.002 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.019 0.02  0.021 0.022
 0.023 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.031 0.032 0.033
 0.034 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.95999897
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.96957415
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  69.14990297344559
Printing some Q and Qe and total Qs values:  [[0.137]
 [0.107]
 [0.108]
 [0.093]
 [0.076]
 [0.097]
 [0.144]] [[84.49 ]
 [89.523]
 [93.684]
 [93.589]
 [94.572]
 [92.83 ]
 [92.119]] [[1.606]
 [1.769]
 [1.93 ]
 [1.911]
 [1.931]
 [1.886]
 [1.906]]
maxi score, test score, baseline:  -0.9925470588235294 -1.0 -0.9925470588235294
probs:  [0.1765508500871496, 0.1475530346781452, 0.1856751626942932, 0.18893003444304035, 0.13810396021260424, 0.16318695788476753]
UNIT TEST: sample policy line 217 mcts : [0.041 0.163 0.122 0.49  0.061 0.061 0.061]
printing an ep nov before normalisation:  96.3310835799675
printing an ep nov before normalisation:  79.4501624581482
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.007817568
true state number:  [0, 91]
comparator state stnum:  [0, 95]
ep length:  44
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6043901
true state number:  [0, 63]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  78.39038936253743
maxi score, test score, baseline:  -0.9926007299270073 -1.0 -0.9926007299270073
printing an ep nov before normalisation:  86.55780259492957
printing an ep nov before normalisation:  95.8648591941911
ep length:  40
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
Printing some Q and Qe and total Qs values:  [[-0.021]
 [-0.021]
 [-0.014]
 [-0.015]
 [-0.021]
 [-0.011]
 [-0.021]] [[98.473]
 [98.473]
 [95.963]
 [95.948]
 [98.473]
 [95.788]
 [98.473]] [[0.975]
 [0.975]
 [0.934]
 [0.933]
 [0.975]
 [0.933]
 [0.975]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6220918
true state number:  [0, 63]
comparator state stnum:  [0, 63]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.58402336
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.7763831096797
printing an ep nov before normalisation:  99.9185109900723
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0005259552
true state number:  [0, 91]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  96.49462331106595
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8917834
true state number:  [0, 64]
comparator state stnum:  [0, 64]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
options / WEIGHTS  [1, 2, 3, 4, 10, 11, 12, 13] [0.018 0.036 0.054 0.071 0.179 0.196 0.214 0.232]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0019132813
true state number:  [0, 97]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.937808e-09
true state number:  [0, 96]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.44147093016707
Printing some Q and Qe and total Qs values:  [[0.464]
 [0.513]
 [0.204]
 [0.467]
 [0.456]
 [0.383]
 [0.464]] [[41.554]
 [90.365]
 [78.996]
 [65.172]
 [63.957]
 [56.149]
 [87.611]] [[0.497]
 [0.796]
 [0.429]
 [0.621]
 [0.604]
 [0.49 ]
 [0.733]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.23171408
true state number:  [0, 95]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8546028
true state number:  [0, 66]
comparator state stnum:  [0, 66]
printing an ep nov before normalisation:  96.01911530743578
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23] [0.004 0.007 0.011 0.014 0.018 0.022 0.025 0.029 0.033 0.036 0.04  0.043
 0.047 0.051 0.054 0.058 0.062 0.065 0.069 0.072 0.076 0.08  0.083]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.5550317
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8613903
true state number:  [0, 35]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  89.7022022746198
maxi score, test score, baseline:  -0.9927571428571429 -1.0 -0.9927571428571429
Training Flag: True
Self play flag: True
resampling flag: False
add more workers flag:  False
expV_train_flag:  True
expV_train_start_flag:  11155
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00036177883
true state number:  [0, 93]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9927571428571429 -1.0 -0.9927571428571429
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.62931395
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7378197
true state number:  [0, 36]
comparator state stnum:  [0, 36]
printing an ep nov before normalisation:  58.20763626406064
ep length:  46
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.005743566
true state number:  [0, 64]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  44.10471028792394
ep length:  56
printing an ep nov before normalisation:  59.822257299650815
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.74378026
true state number:  [0, 71]
comparator state stnum:  [0, 71]
printing an ep nov before normalisation:  66.60578024548134
printing an ep nov before normalisation:  69.32696220743622
printing an ep nov before normalisation:  97.76729496145299
using explorer policy with actor:  1
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32] [0.002 0.004 0.006 0.008 0.009 0.011 0.013 0.015 0.017 0.019 0.021 0.023
 0.025 0.027 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.045
 0.047 0.049 0.051 0.053 0.055 0.057 0.059 0.061]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.8479702e-05
true state number:  [0, 36]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8945638
true state number:  [0, 95]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  97.23377376329566
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00271718
true state number:  [0, 64]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.2660984
true state number:  [0, 96]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  94.63163323522018
printing an ep nov before normalisation:  99.97705303672294
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
Printing some Q and Qe and total Qs values:  [[0.159]
 [0.159]
 [0.159]
 [0.139]
 [0.159]
 [0.147]
 [0.159]] [[99.997]
 [99.997]
 [99.997]
 [99.831]
 [99.997]
 [99.832]
 [99.997]] [[0.492]
 [0.492]
 [0.492]
 [0.471]
 [0.492]
 [0.479]
 [0.492]]
maxi score, test score, baseline:  -0.992906993006993 -1.0 -0.992906993006993
probs:  [0.1700680619567007, 0.15169892194342033, 0.18705951646898505, 0.18399548368808133, 0.14210744060737204, 0.16507057533544062]
printing an ep nov before normalisation:  98.758949704403
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  4.467331e-09
true state number:  [0, 64]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.091425166
true state number:  [0, 96]
comparator state stnum:  [0, 95]
using explorer policy with actor:  1
printing an ep nov before normalisation:  99.60807506381371
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.8978604e-07
true state number:  [0, 64]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  86.52016089687704
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.052645072
true state number:  [0, 99]
comparator state stnum:  [0, 97]
Printing some Q and Qe and total Qs values:  [[0.583]
 [0.483]
 [0.573]
 [0.601]
 [0.584]
 [0.541]
 [0.558]] [[83.325]
 [83.776]
 [82.63 ]
 [82.285]
 [83.687]
 [81.424]
 [79.628]] [[0.583]
 [0.483]
 [0.573]
 [0.601]
 [0.584]
 [0.541]
 [0.558]]
from probs:  [0.16795797176639624, 0.1520846143025158, 0.18753511263851544, 0.1844632895976911, 0.1424687467611054, 0.16549026493377617]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6281093
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  7.4449144e-06
true state number:  [0, 100]
comparator state stnum:  [0, 91]
292 207
Printing some Q and Qe and total Qs values:  [[0.684]
 [0.627]
 [0.598]
 [0.6  ]
 [0.61 ]
 [0.549]
 [0.515]] [[74.621]
 [64.275]
 [62.322]
 [63.911]
 [61.447]
 [58.286]
 [58.77 ]] [[1.668]
 [1.393]
 [1.323]
 [1.359]
 [1.317]
 [1.189]
 [1.166]]
printing an ep nov before normalisation:  98.82031479568214
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.81531364
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.70287013
true state number:  [0, 92]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  75.9020471572876
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.75616324
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.23500995
true state number:  [0, 92]
comparator state stnum:  [0, 63]
maxi score, test score, baseline:  -0.9930034482758621 -1.0 -0.9930034482758621
probs:  [0.16422553812756444, 0.15109988928923856, 0.18883612969942545, 0.18574299523957408, 0.1434571064213526, 0.16663834122284493]
printing an ep nov before normalisation:  98.33826783523448
printing an ep nov before normalisation:  76.53617687394545
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27] [0.003 0.005 0.008 0.011 0.013 0.016 0.019 0.021 0.024 0.026 0.029 0.032
 0.034 0.037 0.04  0.042 0.045 0.048 0.05  0.053 0.056 0.058 0.061 0.063
 0.066 0.069 0.071]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8187432
true state number:  [0, 66]
comparator state stnum:  [0, 66]
printing an ep nov before normalisation:  97.96387960851234
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.016783396
true state number:  [0, 64]
comparator state stnum:  [0, 98]
pos losses:  {0: 0.7134859, 1: 0.70818377, 2: 0.7016295, 3: 0.69296044, 4: 0.6824908}
neg losses:  {0: 0.2875553, 1: 0.29189014, 2: 0.29706165, 3: 0.30086586, 4: 0.30435485}
sample 1s:  [0.9   0.728 0.796 0.804 0.832 0.852 0.929 0.658 0.998 0.921]
neg positives:  [0.015 0.742 0.806 0.737 0.794 0.    0.796 0.819 0.73  0.   ]
printing an ep nov before normalisation:  13.575624945713116
deleting a thread, now have 4 threads
Frames:  14776 train batches done:  1267 episodes:  504
Printing some Q and Qe and total Qs values:  [[ 0.058]
 [-0.021]
 [ 0.053]
 [ 0.054]
 [ 0.039]
 [ 0.05 ]
 [ 0.048]] [[87.109]
 [83.699]
 [91.205]
 [90.427]
 [92.199]
 [92.063]
 [90.689]] [[1.126]
 [0.96 ]
 [1.227]
 [1.207]
 [1.238]
 [1.246]
 [1.208]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.95878386
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5768262
true state number:  [0, 91]
comparator state stnum:  [0, 91]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
maxi score, test score, baseline:  -0.9930506849315068 -1.0 -0.9930506849315068
probs:  [0.1662339572785983, 0.15093737690680217, 0.191145531026952, 0.18205082949977525, 0.14339834800927406, 0.1662339572785983]
ep length:  70
printing an ep nov before normalisation:  0.8967415828777804
printing an ep nov before normalisation:  65.00709593868145
from probs:  [0.1667077564307868, 0.15136757782593294, 0.1916903330158345, 0.17971951506883246, 0.14380706122782638, 0.1667077564307868]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.81766427
true state number:  [0, 93]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  98.97609512483407
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] [0.005 0.01  0.014 0.019 0.024 0.029 0.033 0.038 0.043 0.048 0.052 0.057
 0.062 0.067 0.071 0.076 0.081 0.086 0.09  0.095]
printing an ep nov before normalisation:  70.61592884029342
printing an ep nov before normalisation:  91.7512035369873
maxi score, test score, baseline:  -0.9930972789115646 -1.0 -0.9930972789115646
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.7568552
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.30447605967166
siam score:  -0.8650026
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.89872205
true state number:  [0, 101]
comparator state stnum:  [0, 101]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
301 213
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.42607722
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
probs:  [0.16381118814035422, 0.15304459296830014, 0.1938141000198116, 0.17891754936637472, 0.1418578379846537, 0.1685547315205056]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.007315943
true state number:  [0, 91]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5469856
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8710071
true state number:  [0, 98]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48] [0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.009 0.01
 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02
 0.021 0.022 0.023 0.024 0.025 0.026 0.026 0.027 0.028 0.029 0.03  0.031
 0.031 0.032 0.033 0.034 0.035 0.036 0.037 0.037 0.038 0.039 0.04  0.041]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.0462838e-05
true state number:  [0, 98]
comparator state stnum:  [0, 64]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.12447486
true state number:  [0, 96]
comparator state stnum:  [0, 99]
line 256 mcts: sample exp_bonus 96.35484118311734
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0049297097
true state number:  [0, 98]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  6.4822843e-06
true state number:  [0, 96]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
probs:  [0.16478061531985713, 0.15395030392604198, 0.1917676207601834, 0.17725188298546246, 0.14269734623393163, 0.16955223077452353]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46] [0.001 0.002 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.019 0.02  0.021 0.022
 0.023 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.031 0.032 0.033
 0.034 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.59703773
true state number:  [0, 91]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.71829385, 1: 0.7133187, 2: 0.7074271, 3: 0.69875264, 4: 0.6884144}
neg losses:  {0: 0.28129023, 1: 0.28549546, 2: 0.29079935, 3: 0.29434425, 4: 0.29759625}
sample 1s:  [0.692 0.49  0.709 0.786 0.722 0.825 0.875 0.843 0.886 0.5  ]
neg positives:  [0.002 0.    0.    0.574 0.05  0.007 0.6   0.068 0.601 0.   ]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
probs:  [0.16518033367228563, 0.154323750533956, 0.19223280313172994, 0.1776818536497561, 0.1430434958585208, 0.1675377631537515]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50] [0.001 0.002 0.002 0.003 0.004 0.005 0.005 0.006 0.007 0.008 0.009 0.009
 0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019
 0.02  0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.027 0.028
 0.029 0.03  0.031 0.031 0.032 0.033 0.034 0.035 0.035 0.036 0.037 0.038
 0.038 0.039]
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
probs:  [0.16613519904470095, 0.15521585676869995, 0.19022819942142571, 0.1760440947220272, 0.14387039381851358, 0.16850625622463258]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.95927143
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9727509
true state number:  [0, 99]
comparator state stnum:  [0, 99]
pos losses:  {0: 0.71927017, 1: 0.7142959, 2: 0.70842505, 3: 0.6997016, 4: 0.68932116}
neg losses:  {0: 0.28078467, 1: 0.28502423, 2: 0.29034477, 3: 0.29386625, 4: 0.29706642}
sample 1s:  [0.979 0.972 0.931 0.849 0.951 0.961 0.748 0.909 0.984 0.688]
neg positives:  [0.047 0.08  0.849 0.033 0.677 0.01  0.001 0.    0.003 0.299]
siam score:  -0.8708637
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5638607
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00041724794
true state number:  [0, 63]
comparator state stnum:  [0, 91]
using explorer policy with actor:  1
printing an ep nov before normalisation:  99.99000549316406
Printing some Q and Qe and total Qs values:  [[-0.007]
 [ 0.081]
 [-0.006]
 [-0.001]
 [ 0.013]
 [ 0.017]
 [ 0.018]] [[91.057]
 [92.562]
 [90.932]
 [92.522]
 [91.822]
 [91.393]
 [90.185]] [[1.134]
 [1.259]
 [1.131]
 [1.175]
 [1.172]
 [1.165]
 [1.137]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5148612
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9263231
true state number:  [0, 99]
comparator state stnum:  [0, 99]
from probs:  [0.16313856608430208, 0.1567053099214668, 0.1920536314183358, 0.175122082466054, 0.14525097577788207, 0.16772943433195914]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8366289
true state number:  [0, 96]
comparator state stnum:  [0, 96]
ep length:  94
maxi score, test score, baseline:  -0.9931432432432432 -1.0 -0.9931432432432432
305 220
using explorer policy with actor:  0
Printing some Q and Qe and total Qs values:  [[0.262]
 [0.231]
 [0.242]
 [0.282]
 [0.284]
 [0.266]
 [0.306]] [[95.93 ]
 [95.706]
 [94.763]
 [95.206]
 [94.713]
 [93.748]
 [93.99 ]] [[0.262]
 [0.231]
 [0.242]
 [0.282]
 [0.284]
 [0.266]
 [0.306]]
306 221
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23] [0.004 0.007 0.011 0.014 0.018 0.022 0.025 0.029 0.033 0.036 0.04  0.043
 0.047 0.051 0.054 0.058 0.062 0.065 0.069 0.072 0.076 0.08  0.083]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.5678414
true state number:  [0, 91]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  52.25068312746754
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31] [0.002 0.004 0.006 0.008 0.01  0.012 0.014 0.016 0.018 0.02  0.022 0.024
 0.026 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.046 0.048
 0.05  0.052 0.054 0.056 0.058 0.06  0.062]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7664686
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.40938243
true state number:  [0, 42]
comparator state stnum:  [0, 42]
maxi score, test score, baseline:  -0.9931885906040269 -1.0 -0.9931885906040269
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8170705
true state number:  [0, 62]
comparator state stnum:  [0, 62]
using explorer policy with actor:  1
printing an ep nov before normalisation:  99.99814033508301
maxi score, test score, baseline:  -0.9931885906040269 -1.0 -0.9931885906040269
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7052071
true state number:  [0, 95]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 10, 11, 12, 13] [0.018 0.036 0.054 0.071 0.179 0.196 0.214 0.232]
UNIT TEST: sample policy line 217 mcts : [0.082 0.306 0.102 0.102 0.184 0.143 0.082]
printing an ep nov before normalisation:  99.54927498474717
printing an ep nov before normalisation:  95.67207789689715
siam score:  -0.88283753
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.80427635
true state number:  [0, 36]
comparator state stnum:  [0, 36]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.97193897
true state number:  [0, 98]
comparator state stnum:  [0, 98]
using another actor
maxi score, test score, baseline:  -0.9931885906040269 -1.0 -0.9931885906040269
probs:  [0.1662491719607143, 0.15363524669315112, 0.19261160836646796, 0.16855588514621772, 0.14802051166551627, 0.17092757616793255]
using another actor
from probs:  [0.1662491719607143, 0.15363524669315112, 0.19261160836646796, 0.16855588514621772, 0.14802051166551627, 0.17092757616793255]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.9304215e-09
true state number:  [0, 96]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  0.0668698292344061
maxi score, test score, baseline:  -0.9932774834437086 -1.0 -0.9932774834437086
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.83690506
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8245796
true state number:  [0, 94]
comparator state stnum:  [0, 95]
using another actor
maxi score, test score, baseline:  -0.9932774834437086 -1.0 -0.9932774834437086
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.88372785
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0013558149
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  86.48867501042324
maxi score, test score, baseline:  -0.993321052631579 -1.0 -0.993321052631579
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.473436
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.86419886
true state number:  [0, 95]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  99.99001831772588
printing an ep nov before normalisation:  99.99903521629929
ep length:  63
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.84167117
true state number:  [0, 95]
comparator state stnum:  [0, 95]
using explorer policy with actor:  0
ep length:  83
ep length:  37
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.71227455
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  97.61148653924465
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56] [0.001 0.001 0.002 0.003 0.003 0.004 0.004 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.009 0.01  0.011 0.011 0.012 0.013 0.013 0.014 0.014 0.015
 0.016 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023
 0.023 0.024 0.024 0.025 0.026 0.026 0.027 0.028 0.028 0.029 0.029 0.03
 0.031 0.031 0.032 0.033 0.033 0.034 0.034 0.035]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.5923943e-06
true state number:  [0, 95]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  53.38885653294714
printing an ep nov before normalisation:  96.96519244462252
printing an ep nov before normalisation:  58.592871217560386
printing an ep nov before normalisation:  98.07631447911263
ep length:  48
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] [0.001 0.002 0.002 0.003 0.004 0.005 0.006 0.007 0.007 0.008 0.009 0.01
 0.011 0.011 0.012 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019 0.02
 0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.028 0.029 0.029
 0.03  0.031 0.032 0.033 0.033 0.034 0.035 0.036 0.037 0.038 0.038 0.039
 0.04 ]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52] [0.001 0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.007 0.008 0.009
 0.009 0.01  0.011 0.012 0.012 0.013 0.014 0.015 0.015 0.016 0.017 0.017
 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.025 0.025 0.026
 0.027 0.028 0.028 0.029 0.03  0.03  0.031 0.032 0.033 0.033 0.034 0.035
 0.036 0.036 0.037 0.038]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9670262
true state number:  [0, 99]
comparator state stnum:  [0, 99]
printing an ep nov before normalisation:  72.42214126737389
Printing some Q and Qe and total Qs values:  [[0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]] [[23.122]
 [23.122]
 [23.122]
 [23.122]
 [23.122]
 [23.122]
 [23.122]] [[0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]
 [0.329]]
printing an ep nov before normalisation:  23.302350881639686
ep length:  44
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.19379328
true state number:  [0, 95]
comparator state stnum:  [0, 96]
Printing some Q and Qe and total Qs values:  [[0.457]
 [0.524]
 [0.457]
 [0.457]
 [0.457]
 [0.457]
 [0.457]] [[43.89 ]
 [84.683]
 [43.89 ]
 [43.89 ]
 [43.89 ]
 [43.89 ]
 [43.89 ]] [[1.069]
 [2.147]
 [1.069]
 [1.069]
 [1.069]
 [1.069]
 [1.069]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7271003
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.3633452e-07
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7182074
true state number:  [0, 63]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  96.27176244917457
Printing some Q and Qe and total Qs values:  [[0.52]
 [0.52]
 [0.52]
 [0.52]
 [0.52]
 [0.52]
 [0.52]] [[96.352]
 [96.352]
 [96.352]
 [96.352]
 [96.352]
 [96.352]
 [96.352]] [[2.501]
 [2.501]
 [2.501]
 [2.501]
 [2.501]
 [2.501]
 [2.501]]
printing an ep nov before normalisation:  90.76049055154786
printing an ep nov before normalisation:  99.92188940339406
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32] [0.002 0.004 0.006 0.008 0.009 0.011 0.013 0.015 0.017 0.019 0.021 0.023
 0.025 0.027 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.045
 0.047 0.049 0.051 0.053 0.055 0.057 0.059 0.061]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32] [0.002 0.004 0.006 0.008 0.009 0.011 0.013 0.015 0.017 0.019 0.021 0.023
 0.025 0.027 0.028 0.03  0.032 0.034 0.036 0.038 0.04  0.042 0.044 0.045
 0.047 0.049 0.051 0.053 0.055 0.057 0.059 0.061]
options / WEIGHTS  [1, 2, 3, 4, 5, 10, 11, 12, 13, 14] [0.013 0.027 0.04  0.053 0.067 0.133 0.147 0.16  0.173 0.187]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00814591
true state number:  [0, 99]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.0026061e-09
true state number:  [0, 99]
comparator state stnum:  [0, 94]
printing an ep nov before normalisation:  95.7269966375811
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.01  0.01  0.011 0.012 0.012 0.013 0.014 0.014 0.015 0.016
 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023 0.023
 0.024 0.025 0.025 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031
 0.032 0.032 0.033 0.034 0.034 0.035 0.036]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.061832104
true state number:  [0, 64]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.79855007
true state number:  [0, 96]
comparator state stnum:  [0, 96]
ep length:  36
printing an ep nov before normalisation:  98.71523339867073
printing an ep nov before normalisation:  54.40348087942171
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
printing an ep nov before normalisation:  52.41108012955723
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92] [0.    0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003
 0.003 0.003 0.004 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006
 0.006 0.006 0.006 0.007 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008
 0.009 0.009 0.009 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011
 0.011 0.012 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014 0.014 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.019 0.02
 0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022]
printing an ep nov before normalisation:  59.14597068185251
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.265124
true state number:  [0, 95]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9935305732484077 -1.0 -0.9935305732484077
printing an ep nov before normalisation:  77.90712523819448
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37] [0.001 0.003 0.004 0.006 0.007 0.009 0.01  0.011 0.013 0.014 0.016 0.017
 0.018 0.02  0.021 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.033 0.034
 0.036 0.037 0.038 0.04  0.041 0.043 0.044 0.046 0.047 0.048 0.05  0.051
 0.053]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  6.221551e-05
true state number:  [0, 97]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  74.9699655965128
printing an ep nov before normalisation:  53.77635945960053
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66] [0.    0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.005
 0.006 0.006 0.007 0.007 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.011
 0.011 0.012 0.012 0.013 0.013 0.014 0.014 0.014 0.015 0.015 0.016 0.016
 0.017 0.017 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.021 0.021 0.022
 0.022 0.023 0.023 0.024 0.024 0.024 0.025 0.025 0.026 0.026 0.027 0.027
 0.028 0.028 0.028 0.029 0.029 0.03 ]
ep length:  41
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9772964
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.14692385
true state number:  [0, 101]
comparator state stnum:  [0, 95]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37] [0.001 0.003 0.004 0.006 0.007 0.009 0.01  0.011 0.013 0.014 0.016 0.017
 0.018 0.02  0.021 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.033 0.034
 0.036 0.037 0.038 0.04  0.041 0.043 0.044 0.046 0.047 0.048 0.05  0.051
 0.053]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.79002047
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  1.5408175e-05
true state number:  [0, 98]
comparator state stnum:  [0, 92]
Printing some Q and Qe and total Qs values:  [[-0.059]
 [-0.059]
 [-0.059]
 [-0.055]
 [-0.059]
 [-0.057]
 [-0.059]] [[99.528]
 [99.528]
 [99.528]
 [99.479]
 [99.528]
 [99.523]
 [99.528]] [[0.607]
 [0.607]
 [0.607]
 [0.611]
 [0.607]
 [0.609]
 [0.607]]
using explorer policy with actor:  1
ep length:  37
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  5.1706025e-05
true state number:  [0, 95]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.61654747
true state number:  [0, 93]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  97.73438453674316
printing an ep nov before normalisation:  99.02793247269528
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26] [0.003 0.006 0.009 0.011 0.014 0.017 0.02  0.023 0.026 0.028 0.031 0.034
 0.037 0.04  0.043 0.046 0.048 0.051 0.054 0.057 0.06  0.063 0.066 0.068
 0.071 0.074]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.86961067
true state number:  [0, 97]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  99.85406713089212
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.43564576
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7129695
true state number:  [0, 98]
comparator state stnum:  [0, 97]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68] [0.    0.001 0.001 0.002 0.002 0.003 0.003 0.003 0.004 0.004 0.005 0.005
 0.006 0.006 0.006 0.007 0.007 0.008 0.008 0.009 0.009 0.009 0.01  0.01
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.014 0.014 0.014 0.015 0.015
 0.016 0.016 0.017 0.017 0.017 0.018 0.018 0.019 0.019 0.02  0.02  0.02
 0.021 0.021 0.022 0.022 0.023 0.023 0.023 0.024 0.024 0.025 0.025 0.026
 0.026 0.026 0.027 0.027 0.028 0.028 0.029 0.029]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.4136688
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9935305732484077 -1.0 -0.9935305732484077
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.75025535
true state number:  [0, 100]
comparator state stnum:  [0, 100]
Printing some Q and Qe and total Qs values:  [[-0.067]
 [-0.067]
 [-0.067]
 [-0.067]
 [-0.067]
 [-0.067]
 [-0.067]] [[45.75]
 [45.75]
 [45.75]
 [45.75]
 [45.75]
 [45.75]
 [45.75]] [[0.249]
 [0.249]
 [0.249]
 [0.249]
 [0.249]
 [0.249]
 [0.249]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46] [0.001 0.002 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.019 0.02  0.021 0.022
 0.023 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.031 0.032 0.033
 0.034 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.72825795
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.7250452
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00012852054
true state number:  [0, 36]
comparator state stnum:  [0, 65]
from probs:  [0.16647919372179504, 0.15228210264552397, 0.19506351548696585, 0.17103559868560808, 0.14866039573831197, 0.16647919372179504]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65] [0.    0.001 0.001 0.002 0.002 0.003 0.003 0.004 0.004 0.005 0.005 0.006
 0.006 0.007 0.007 0.007 0.008 0.008 0.009 0.009 0.01  0.01  0.011 0.011
 0.012 0.012 0.013 0.013 0.014 0.014 0.014 0.015 0.015 0.016 0.016 0.017
 0.017 0.018 0.018 0.019 0.019 0.02  0.02  0.021 0.021 0.021 0.022 0.022
 0.023 0.023 0.024 0.024 0.025 0.025 0.026 0.026 0.027 0.027 0.028 0.028
 0.028 0.029 0.029 0.03  0.03 ]
printing an ep nov before normalisation:  61.49825545984865
line 256 mcts: sample exp_bonus 89.00433709527576
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861, 451007, 904523, 185455, 734543, 551914, 765814, 306245, 359144, 733219, 615275, 734570, 521900, 819923, 375057, 852950, 634105, 83558, 321059, 323589, 462414, 660263, 122616, 902553, 417580, 398727, 366802, 235878, 280686, 569314, 741821, 968777, 754411, 395469, 90484, 828925, 402710, 264044, 454681, 983614, 634246, 806962, 489663, 745937, 685862, 453358, 982603, 570841, 154408, 97628, 906272, 39110, 427462, 305529, 856158, 711079, 38000, 774517, 476513, 612607, 593592, 381312, 309048, 344726, 98051, 849618, 431447, 94782, 98033, 96657, 173123, 676241, 818637, 427910, 905980, 147768, 393173, 634624, 570279, 574069, 189011, 281060, 480801, 920021, 903787, 719477, 802347, 84017, 440651, 600761, 951155, 508923, 689023, 325965, 939402, 173503, 251521, 812274, 131807, 523848, 335797, 678599, 637190, 365509, 906955, 133890, 109122, 586707, 899955, 989071, 735269, 21309, 453365, 797990, 520956, 664496, 506180, 354284, 167262, 990197, 659158, 43259, 484095, 920115, 460395, 376489, 736957, 770835, 852168, 879849, 932689, 770158, 313730, 311439, 611898, 153665, 333383, 571435, 291145, 408536, 394441, 914183, 628648, 601351, 2702, 662238, 86226, 60120, 640161, 399474, 594645, 463828, 268505, 989497, 442938, 637691, 964840, 274848, 707539, 762955, 467583, 141667, 822010, 841321, 829485, 26925, 692324, 660757, 100779, 524125, 938043, 2314, 436925, 288800, 664757, 460094, 749251, 795681, 819913, 917586, 565064, 574824, 100345, 44909, 927976, 605755, 335057, 647047, 825556, 477634, 241638, 858119, 338492, 308852, 702938, 332339, 795594, 593060, 756646, 860020, 964526, 738579, 121300, 550198, 426366, 651346, 144865, 862542, 794005, 200310, 696181, 411583, 840854, 840782, 948530, 805601, 390040, 996809, 414220, 685943, 828461, 874250, 645631, 261126, 748572, 431453, 741293, 6845, 545067, 250569, 36001, 688564, 91169, 592900, 246998, 888621, 950380]
printing an ep nov before normalisation:  95.05019187927246
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9359111
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.98534584
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7837472
true state number:  [0, 98]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  99.82445198259262
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00066722324
true state number:  [0, 35]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  94.35129170616503
printing an ep nov before normalisation:  52.76092529296875
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.612432e-06
true state number:  [0, 95]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.80180895
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9100376
true state number:  [0, 97]
comparator state stnum:  [0, 97]
printing an ep nov before normalisation:  25.320351197364886
using explorer policy with actor:  1
printing an ep nov before normalisation:  25.335302352905273
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39] [0.001 0.003 0.004 0.005 0.006 0.008 0.009 0.01  0.012 0.013 0.014 0.015
 0.017 0.018 0.019 0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029 0.031
 0.032 0.033 0.035 0.036 0.037 0.038 0.04  0.041 0.042 0.044 0.045 0.046
 0.047 0.049 0.05 ]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.1842886
true state number:  [0, 95]
comparator state stnum:  [0, 96]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9102068
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.82166934
true state number:  [0, 63]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  60.50588362481951
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.66011554
true state number:  [0, 36]
comparator state stnum:  [0, 36]
Printing some Q and Qe and total Qs values:  [[0.439]
 [0.439]
 [0.439]
 [0.439]
 [0.439]
 [0.439]
 [0.439]] [[33.514]
 [33.514]
 [33.514]
 [33.514]
 [33.514]
 [33.514]
 [33.514]] [[0.467]
 [0.467]
 [0.467]
 [0.467]
 [0.467]
 [0.467]
 [0.467]]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.0179934e-07
true state number:  [0, 95]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  61.072152853012085
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.84812135
true state number:  [0, 100]
comparator state stnum:  [0, 100]
Printing some Q and Qe and total Qs values:  [[0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]] [[98.301]
 [98.301]
 [98.301]
 [98.301]
 [98.301]
 [98.301]
 [98.301]] [[0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]]
using explorer policy with actor:  1
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.057783023
true state number:  [0, 96]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  82.3802661895752
siam score:  -0.86708033
printing an ep nov before normalisation:  80.86636192486637
printing an ep nov before normalisation:  98.25801287870466
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.36572322
true state number:  [0, 95]
comparator state stnum:  [0, 95]
siam score:  -0.8660915
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.92797077
true state number:  [0, 37]
comparator state stnum:  [0, 37]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8060853
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.58806044
true state number:  [0, 92]
comparator state stnum:  [0, 91]
pos losses:  {0: 0.7323957, 1: 0.7283027, 2: 0.72411424, 3: 0.7157998, 4: 0.7057941}
neg losses:  {0: 0.2662276, 1: 0.27026105, 2: 0.27536973, 3: 0.27839172, 4: 0.28092334}
sample 1s:  [0.921 0.84  0.705 0.665 0.856 0.619 0.834 0.869 0.84  0.878]
neg positives:  [0.    0.    0.255 0.563 0.827 0.295 0.023 0.    0.    0.   ]
printing an ep nov before normalisation:  70.17513325289016
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024
 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.036
 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.044]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.682271
true state number:  [0, 91]
comparator state stnum:  [0, 91]
Printing some Q and Qe and total Qs values:  [[0.444]
 [0.559]
 [0.482]
 [0.509]
 [0.482]
 [0.482]
 [0.485]] [[73.757]
 [89.446]
 [67.616]
 [93.442]
 [67.616]
 [67.616]
 [90.323]] [[1.057]
 [1.403]
 [1.005]
 [1.412]
 [1.005]
 [1.005]
 [1.342]]
printing an ep nov before normalisation:  98.12392339298474
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.65338147
true state number:  [0, 97]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.99365 -1.0 -0.99365
using explorer policy with actor:  1
printing an ep nov before normalisation:  44.426498848408194
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.047063738
true state number:  [0, 38]
comparator state stnum:  [0, 36]
printing an ep nov before normalisation:  47.480507463395035
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9874862
true state number:  [0, 98]
comparator state stnum:  [0, 98]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0005600477
true state number:  [0, 92]
comparator state stnum:  [0, 97]
pos losses:  {0: 0.73401076, 1: 0.72996426, 2: 0.726046, 3: 0.7177656, 4: 0.7080148}
neg losses:  {0: 0.26477703, 1: 0.26870608, 2: 0.27382165, 3: 0.27681023, 4: 0.27934662}
sample 1s:  [0.959 0.705 0.993 0.977 0.907 0.966 0.672 0.905 0.703 0.898]
neg positives:  [0.005 0.007 0.826 0.016 0.672 0.012 0.038 0.072 0.    0.   ]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
maxi score, test score, baseline:  -0.99365 -1.0 -0.99365
printing an ep nov before normalisation:  95.3154333955247
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9012584
true state number:  [0, 38]
comparator state stnum:  [0, 38]
printing an ep nov before normalisation:  98.69787215994538
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.72942364
true state number:  [0, 64]
comparator state stnum:  [0, 64]
using another actor
using explorer policy with actor:  1
using another actor
from probs:  [0.16523401914835067, 0.15552497881360786, 0.18615631733448662, 0.17166468222720632, 0.15195383754105876, 0.16946616493528985]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6520407
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  78.17215194489205
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.58670956
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  3.4605403e-06
true state number:  [0, 99]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.34663457
true state number:  [0, 97]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  81.97303771972656
Printing some Q and Qe and total Qs values:  [[0.517]
 [0.545]
 [0.517]
 [0.505]
 [0.517]
 [0.511]
 [0.517]] [[81.929]
 [82.101]
 [81.929]
 [80.081]
 [81.929]
 [80.057]
 [81.929]] [[0.517]
 [0.545]
 [0.517]
 [0.505]
 [0.517]
 [0.511]
 [0.517]]
ep length:  52
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00014785792
true state number:  [0, 62]
comparator state stnum:  [0, 96]
using explorer policy with actor:  1
maxi score, test score, baseline:  -0.9937271604938271 -1.0 -0.9937271604938271
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  5.9066766e-05
true state number:  [0, 63]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00062513363
true state number:  [0, 63]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.07618609915045
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.63455665
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8097183
true state number:  [0, 92]
comparator state stnum:  [0, 92]
Printing some Q and Qe and total Qs values:  [[0.586]
 [0.559]
 [0.578]
 [0.602]
 [0.586]
 [0.591]
 [0.593]] [[99.938]
 [98.16 ]
 [98.201]
 [98.224]
 [99.938]
 [98.202]
 [98.187]] [[0.586]
 [0.559]
 [0.578]
 [0.602]
 [0.586]
 [0.591]
 [0.593]]
UNIT TEST: sample policy line 217 mcts : [0.224 0.143 0.122 0.163 0.082 0.143 0.122]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.08549467
true state number:  [0, 95]
comparator state stnum:  [0, 97]
347 242
printing an ep nov before normalisation:  98.72765390915924
printing an ep nov before normalisation:  34.348293962542655
printing an ep nov before normalisation:  45.46036534022587
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.8039733
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.73818356
true state number:  [0, 35]
comparator state stnum:  [0, 35]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.11013425
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.91078324477718
printing an ep nov before normalisation:  99.30881899429676
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.93988585
true state number:  [0, 97]
comparator state stnum:  [0, 97]
pos losses:  {0: 0.73751324, 1: 0.7336593, 2: 0.7298062, 3: 0.72142166, 4: 0.7116593}
neg losses:  {0: 0.26175648, 1: 0.26547945, 2: 0.27067244, 3: 0.27351162, 4: 0.27606127}
sample 1s:  [0.897 0.682 0.723 0.956 0.813 0.754 0.9   0.788 0.922 0.85 ]
neg positives:  [0.    0.001 0.001 0.757 0.026 0.002 0.035 0.523 0.087 0.235]
printing an ep nov before normalisation:  98.49679946899414
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.03384883
true state number:  [0, 92]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0036363027
true state number:  [0, 100]
comparator state stnum:  [0, 98]
Printing some Q and Qe and total Qs values:  [[0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]
 [0.463]] [[99.171]
 [99.171]
 [99.171]
 [99.171]
 [99.171]
 [99.171]
 [99.171]] [[1.463]
 [1.463]
 [1.463]
 [1.463]
 [1.463]
 [1.463]
 [1.463]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.054196063
true state number:  [0, 99]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  72.13863372802734
printing an ep nov before normalisation:  99.82366633279483
printing an ep nov before normalisation:  96.76681563069458
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.697121
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.94675434
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0010368939
true state number:  [0, 95]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  4.6942435e-07
true state number:  [0, 97]
comparator state stnum:  [0, 95]
printing an ep nov before normalisation:  78.60837459564209
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0019292001
true state number:  [0, 93]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9123598
true state number:  [0, 97]
comparator state stnum:  [0, 97]
pos losses:  {0: 0.73837125, 1: 0.73481363, 2: 0.7313841, 3: 0.723384, 4: 0.7139412}
neg losses:  {0: 0.25978473, 1: 0.26346844, 2: 0.26874885, 3: 0.2715816, 4: 0.27420014}
sample 1s:  [0.545 0.702 0.873 0.929 0.601 0.867 0.905 0.99  0.851 0.704]
neg positives:  [0.082 0.207 0.851 0.025 0.002 0.556 0.219 0.544 0.481 0.69 ]
printing an ep nov before normalisation:  97.71058645428873
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7561179
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.21774505253094
printing an ep nov before normalisation:  99.43465232849121
printing an ep nov before normalisation:  97.7056973392076
Printing some Q and Qe and total Qs values:  [[0.293]
 [0.293]
 [0.293]
 [0.292]
 [0.293]
 [0.297]
 [0.293]] [[98.773]
 [98.773]
 [98.773]
 [97.502]
 [98.773]
 [97.386]
 [98.773]] [[1.624]
 [1.624]
 [1.624]
 [1.591]
 [1.624]
 [1.592]
 [1.624]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.004457298
true state number:  [0, 92]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8135013
true state number:  [0, 64]
comparator state stnum:  [0, 64]
in main func line 156:  354
printing an ep nov before normalisation:  99.99358941677887
Printing some Q and Qe and total Qs values:  [[0.114]
 [0.027]
 [0.082]
 [0.084]
 [0.093]
 [0.114]
 [0.121]] [[94.466]
 [97.867]
 [94.686]
 [94.553]
 [94.473]
 [92.758]
 [92.336]] [[0.415]
 [0.349]
 [0.384]
 [0.385]
 [0.394]
 [0.404]
 [0.409]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92] [0.    0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003
 0.003 0.003 0.004 0.004 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006
 0.006 0.006 0.006 0.007 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.008
 0.009 0.009 0.009 0.009 0.01  0.01  0.01  0.01  0.011 0.011 0.011 0.011
 0.011 0.012 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014 0.014 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.016 0.017 0.017
 0.017 0.017 0.018 0.018 0.018 0.018 0.018 0.019 0.019 0.019 0.019 0.02
 0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022]
Printing some Q and Qe and total Qs values:  [[0.433]
 [0.411]
 [0.429]
 [0.426]
 [0.451]
 [0.437]
 [0.427]] [[57.867]
 [71.169]
 [68.184]
 [65.929]
 [71.505]
 [70.82 ]
 [69.094]] [[1.412]
 [1.887]
 [1.793]
 [1.706]
 [1.94 ]
 [1.899]
 [1.825]]
UNIT TEST: sample policy line 217 mcts : [0.122 0.306 0.102 0.102 0.102 0.163 0.102]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7490096
true state number:  [0, 36]
comparator state stnum:  [0, 36]
printing an ep nov before normalisation:  94.58310480284632
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41] [0.001 0.002 0.003 0.005 0.006 0.007 0.008 0.009 0.01  0.012 0.013 0.014
 0.015 0.016 0.017 0.019 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028
 0.029 0.03  0.031 0.033 0.034 0.035 0.036 0.037 0.038 0.039 0.041 0.042
 0.043 0.044 0.045 0.046 0.048]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0012649972
true state number:  [0, 100]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8361148
true state number:  [0, 34]
comparator state stnum:  [0, 34]
pos losses:  {0: 0.74052733, 1: 0.737032, 2: 0.7336191, 3: 0.7256399, 4: 0.7162472}
neg losses:  {0: 0.25762582, 1: 0.2612016, 2: 0.26640597, 3: 0.2692018, 4: 0.2718985}
sample 1s:  [0.921 0.704 0.704 0.668 0.697 0.546 0.699 0.81  0.063 0.692]
neg positives:  [0.    0.704 0.016 0.697 0.861 0.    0.097 0.    0.001 0.   ]
using explorer policy with actor:  1
actor:  1 policy actor:  1  step number:  57 total reward:  0.1999999999999995  reward:  1.0 rdn_beta:  1.333
Printing some Q and Qe and total Qs values:  [[ 0.138]
 [-0.009]
 [ 0.119]
 [ 0.126]
 [ 0.131]
 [ 0.124]
 [ 0.107]] [[89.685]
 [89.041]
 [94.327]
 [89.673]
 [83.432]
 [91.275]
 [91.284]] [[1.933]
 [1.76 ]
 [2.099]
 [1.92 ]
 [1.675]
 [1.982]
 [1.965]]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.1227477e-05
true state number:  [0, 99]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.9496214e-05
true state number:  [0, 99]
comparator state stnum:  [0, 63]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.2296172e-08
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7943412
true state number:  [0, 102]
comparator state stnum:  [0, 102]
printing an ep nov before normalisation:  80.02027973014707
printing an ep nov before normalisation:  89.63989733034649
printing an ep nov before normalisation:  90.0425410253829
printing an ep nov before normalisation:  95.30221440373072
maxi score, test score, baseline:  -0.9938024390243902 -1.0 -0.9938024390243902
probs:  [0.12581640791978357, 0.12003829209079639, 0.14110108594038145, 0.36678074179920445, 0.1173440021255945, 0.12891947012423968]
using explorer policy with actor:  1
ep length:  41
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0029595373
true state number:  [0, 97]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9938024390243902 -1.0 -0.9938024390243902
probs:  [0.12581640791978357, 0.12003829209079639, 0.14110108594038145, 0.36678074179920445, 0.1173440021255945, 0.12891947012423968]
using explorer policy with actor:  1
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8357953
true state number:  [0, 63]
comparator state stnum:  [0, 63]
in main func line 156:  361
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] [0.001 0.002 0.002 0.003 0.004 0.005 0.006 0.007 0.007 0.008 0.009 0.01
 0.011 0.011 0.012 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019 0.02
 0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.028 0.029 0.029
 0.03  0.031 0.032 0.033 0.033 0.034 0.035 0.036 0.037 0.038 0.038 0.039
 0.04 ]
maxi score, test score, baseline:  -0.9938024390243902 -1.0 -0.9938024390243902
using explorer policy with actor:  1
printing an ep nov before normalisation:  78.38439319007972
printing an ep nov before normalisation:  99.88357543945312
printing an ep nov before normalisation:  96.9041807551983
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8384332
true state number:  [0, 92]
comparator state stnum:  [0, 92]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [34, 18, 33, 11, 25, 56, 30, 7, 13, 32, 46, 61, 13, 25, 37, 32, 10, 17, 36, 31] [37, 21, 36, 12, 26, 57, 30, 8, 15, 32, 47, 62, 16, 25, 38, 33, 11, 19, 38, 32] [12, 42, 63, 1, 3, 40, 19, 24, 26, 16, 26, 20, 25, 11, 21, 15, 0, 4, 2, 13]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9075498
true state number:  [0, 96]
comparator state stnum:  [0, 96]
pos losses:  {0: 0.7442419, 1: 0.74083763, 2: 0.73773444, 3: 0.7300422, 4: 0.7208561}
neg losses:  {0: 0.25413752, 1: 0.2575831, 2: 0.26287213, 3: 0.2657844, 4: 0.26846823}
sample 1s:  [0.539 0.155 0.724 0.862 0.835 0.733 0.586 0.847 0.791 0.481]
neg positives:  [0.004 0.001 0.693 0.617 0.019 0.166 0.732 0.583 0.724 0.   ]
ep length:  35
printing an ep nov before normalisation:  91.68995072742688
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.027445897
true state number:  [0, 72]
comparator state stnum:  [0, 96]
Printing some Q and Qe and total Qs values:  [[0.158]
 [0.158]
 [0.155]
 [0.158]
 [0.158]
 [0.16 ]
 [0.158]] [[99.196]
 [99.196]
 [99.191]
 [99.196]
 [99.196]
 [99.237]
 [99.196]] [[1.823]
 [1.823]
 [1.819]
 [1.823]
 [1.823]
 [1.826]
 [1.823]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45] [0.001 0.002 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011 0.012
 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023
 0.024 0.025 0.026 0.027 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035
 0.036 0.037 0.038 0.039 0.04  0.041 0.042 0.043 0.043]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
printing an ep nov before normalisation:  89.5056349506176
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00785564
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.39520048572885
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.02854025
true state number:  [0, 35]
comparator state stnum:  [0, 63]
maxi score, test score, baseline:  -0.9938393939393939 -1.0 -0.9938393939393939
probs:  [0.12374639201810968, 0.11825300059494405, 0.14378984721074106, 0.3692684793007413, 0.11825300059494405, 0.12668928028051984]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.54886055
true state number:  [0, 92]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.68480974
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9938393939393939 -1.0 -0.9938393939393939
printing an ep nov before normalisation:  83.83576061330649
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  9.812345e-05
true state number:  [0, 35]
comparator state stnum:  [0, 93]
printing an ep nov before normalisation:  88.97190298140032
printing an ep nov before normalisation:  97.98899115192228
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.94247216
true state number:  [0, 63]
comparator state stnum:  [0, 63]
deleting a thread, now have 3 threads
Frames:  18078 train batches done:  1554 episodes:  620
Printing some Q and Qe and total Qs values:  [[-0.014]
 [-0.014]
 [-0.014]
 [-0.014]
 [-0.014]
 [ 0.001]
 [-0.014]] [[99.303]
 [99.303]
 [99.303]
 [99.303]
 [99.303]
 [99.694]
 [99.303]] [[1.64 ]
 [1.64 ]
 [1.64 ]
 [1.64 ]
 [1.64 ]
 [1.668]
 [1.64 ]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.71802366
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.00985705001395
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.2067838e-07
true state number:  [0, 64]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
printing an ep nov before normalisation:  99.99445915222168
printing an ep nov before normalisation:  99.90304945630854
printing an ep nov before normalisation:  98.40346870054097
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.864707
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0027138328
true state number:  [0, 71]
comparator state stnum:  [0, 98]
maxi score, test score, baseline:  -0.9938393939393939 -1.0 -0.9938393939393939
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.015648004
true state number:  [0, 72]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.87081087
true state number:  [0, 62]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  72.75051093821868
using explorer policy with actor:  1
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.95148623
true state number:  [0, 101]
comparator state stnum:  [0, 101]
printing an ep nov before normalisation:  99.99153126712984
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.73708427
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8765482
true state number:  [0, 132]
comparator state stnum:  [0, 132]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.63381165
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.81357473
true state number:  [0, 100]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.8687456
true state number:  [0, 63]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  92.94584460332702
printing an ep nov before normalisation:  99.95146369206377
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.4341003e-09
true state number:  [0, 36]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  79.47749742803637
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8747369
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0010073062
true state number:  [0, 64]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  9.777831e-10
true state number:  [0, 96]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.2720084e-10
true state number:  [0, 94]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.92900665728939
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.85629374
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0034922643
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  98.48058255718371
using explorer policy with actor:  1
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
Printing some Q and Qe and total Qs values:  [[0.462]
 [0.477]
 [0.462]
 [0.474]
 [0.462]
 [0.462]
 [0.462]] [[77.044]
 [80.354]
 [77.044]
 [79.644]
 [77.044]
 [77.044]
 [77.044]] [[0.751]
 [0.789]
 [0.751]
 [0.782]
 [0.751]
 [0.751]
 [0.751]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.85666275
true state number:  [0, 71]
comparator state stnum:  [0, 71]
printing an ep nov before normalisation:  82.53023368905242
using explorer policy with actor:  1
siam score:  -0.86739814
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  3.54706e-06
true state number:  [0, 95]
comparator state stnum:  [0, 62]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27] [0.003 0.005 0.008 0.011 0.013 0.016 0.019 0.021 0.024 0.026 0.029 0.032
 0.034 0.037 0.04  0.042 0.045 0.048 0.05  0.053 0.056 0.058 0.061 0.063
 0.066 0.069 0.071]
ep length:  53
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.90718275
true state number:  [0, 95]
comparator state stnum:  [0, 95]
maxi score, test score, baseline:  -0.9939119760479042 -1.0 -0.9939119760479042
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  6.0823375e-08
true state number:  [0, 96]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  95.59640567706475
options / WEIGHTS  [1, 2, 3, 4, 5, 10, 11, 12, 13, 14] [0.013 0.027 0.04  0.053 0.067 0.133 0.147 0.16  0.173 0.187]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7821267
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9240574
true state number:  [0, 99]
comparator state stnum:  [0, 99]
pos losses:  {0: 0.7493202, 1: 0.74642503, 2: 0.74385095, 3: 0.7366076, 4: 0.7277513}
neg losses:  {0: 0.24750546, 1: 0.2507566, 2: 0.25598696, 3: 0.25907215, 4: 0.26164806}
sample 1s:  [0.627 0.796 0.977 0.844 0.546 0.775 0.829 0.921 0.633 0.878]
neg positives:  [0.    0.    0.002 0.044 0.001 0.573 0.514 0.052 0.029 0.507]
maxi score, test score, baseline:  -0.9939119760479042 -1.0 -0.9939119760479042
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.98760974
true state number:  [0, 97]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.93817025
true state number:  [0, 96]
comparator state stnum:  [0, 96]
printing an ep nov before normalisation:  40.269925869521714
printing an ep nov before normalisation:  22.26785988583211
maxi score, test score, baseline:  -0.9939119760479042 -1.0 -0.9939119760479042
Printing some Q and Qe and total Qs values:  [[-0.029]
 [-0.029]
 [-0.029]
 [-0.029]
 [-0.029]
 [-0.005]
 [-0.029]] [[88.307]
 [88.307]
 [88.307]
 [88.307]
 [88.307]
 [91.019]
 [88.307]] [[1.645]
 [1.645]
 [1.645]
 [1.645]
 [1.645]
 [1.777]
 [1.645]]
[12. 10. 28. 26. 35. 32. 22. 43. 33. 34. 46. 29. 20. 30. 17. 16. 31. 48.
 26. 28.]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [6, 24, 31, 31, 28, 7, 12, 26, 25, 51, 50, 21, 26, 38, 26, 50, 44, 36, 34, 15] [7, 25, 31, 32, 28, 8, 12, 28, 26, 53, 51, 23, 27, 39, 27, 49, 45, 38, 35, 16] [20, 44, 55, 41, 15, 24, 26, 3, 15, 30, 0, 84, 11, 3, 3, 10, 30, 16, 17, 2]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.91911036
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.38789442
true state number:  [0, 63]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.85972416
true state number:  [0, 100]
comparator state stnum:  [0, 100]
maxi score, test score, baseline:  -0.9939119760479042 -1.0 -0.9939119760479042
probs:  [0.12672591869806962, 0.11730007247819937, 0.14697802257619086, 0.36496999507127104, 0.11730007247819937, 0.12672591869806962]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
printing an ep nov before normalisation:  53.68100972736725
ep ids:  [858956, 624615, 5054, 156464, 539513, 483190, 105693, 370681, 733904, 337049, 822006, 50791, 994146, 932788, 825863, 799681, 989378, 16109, 913131, 767381, 801844, 26969, 761229, 262320, 540639, 864291, 775584, 543033, 226470, 947993, 586413, 85199, 110108, 450380, 775801, 444734, 865127, 913861, 283943, 607561, 212001, 357495, 720407, 801886, 999270, 734381, 307950, 313301, 937320, 20832, 176687, 152352, 993966, 869485, 752308, 102356, 282356, 429736, 928224, 876989, 629407, 38873, 405527, 404589, 703674, 244499, 457973, 452053, 934571, 913607, 475222, 161233, 15392, 977660, 681637, 906180, 972986, 397935, 701055, 167556, 794360, 190210, 866300, 154483, 21072, 506812, 939552, 441506, 984097, 281915, 878861, 451007, 904523, 185455, 734543, 551914, 765814, 306245, 359144, 733219, 615275, 734570, 521900, 819923, 375057, 852950, 634105, 83558, 321059, 323589, 462414, 660263, 122616, 902553, 417580, 398727, 366802, 235878, 280686, 569314, 741821, 968777, 754411, 395469, 90484, 828925, 402710, 264044, 454681, 983614, 634246, 806962, 489663, 745937, 685862, 453358, 982603, 570841, 154408, 97628, 906272, 39110, 427462, 305529, 856158, 711079, 38000, 774517, 476513, 612607, 593592, 381312, 309048, 344726, 98051, 849618, 431447, 94782, 98033, 96657, 173123, 676241, 818637, 427910, 905980, 147768, 393173, 634624, 570279, 574069, 189011, 281060, 480801, 920021, 903787, 719477, 802347, 84017, 440651, 600761, 951155, 508923, 689023, 325965, 939402, 173503, 251521, 812274, 131807, 523848, 335797, 678599, 637190, 365509, 906955, 133890, 109122, 586707, 899955, 989071, 735269, 21309, 453365, 797990, 520956, 664496, 506180, 354284, 167262, 990197, 659158, 43259, 484095, 920115, 460395, 376489, 736957, 770835, 852168, 879849, 932689, 770158, 313730, 311439, 611898, 153665, 333383, 571435, 291145, 408536, 394441, 914183, 628648, 601351, 2702, 662238, 86226, 60120, 640161, 399474, 594645, 463828, 268505, 989497, 442938, 637691, 964840, 274848, 707539, 762955, 467583, 141667, 822010, 841321, 829485, 26925, 692324, 660757, 100779, 524125, 938043, 2314, 436925, 288800, 664757, 460094, 749251, 795681, 819913, 917586, 565064, 574824, 100345, 44909, 927976, 605755, 335057, 647047, 825556, 477634, 241638, 858119, 338492, 308852, 702938, 332339, 795594, 593060, 756646, 860020, 964526, 738579, 121300, 550198, 426366, 651346, 144865, 862542, 794005, 200310, 696181, 411583, 840854, 840782, 948530, 805601, 390040, 996809, 414220, 685943, 828461, 874250, 645631, 261126, 748572, 431453, 741293, 6845, 545067, 250569, 36001, 688564, 91169, 592900, 246998, 888621, 950380, 128619, 788648, 235801, 778491, 836738, 635045, 933438, 266903, 828255, 897453, 72445, 365424, 169146, 497524, 92798, 875562, 226127, 336496, 154902, 891798, 440605, 335184, 20313, 509566, 313713, 900286, 87294, 469318, 73389, 730080, 375808, 85575, 53500, 976216, 405064, 292462, 321239, 997205, 817397, 371826, 617325, 197289, 846839, 282664, 703663, 168038, 894233, 725727, 249919, 515119, 846917, 805616]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  4.61464e-06
true state number:  [0, 98]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.94649917
true state number:  [0, 97]
comparator state stnum:  [0, 97]
siam score:  -0.86792785
options / WEIGHTS  [1, 2, 3, 4, 10, 11, 12, 13] [0.018 0.036 0.054 0.071 0.179 0.196 0.214 0.232]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.42138788
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.82404155
true state number:  [0, 92]
comparator state stnum:  [0, 92]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9274869
true state number:  [0, 99]
comparator state stnum:  [0, 99]
Printing some Q and Qe and total Qs values:  [[-0.019]
 [-0.029]
 [-0.03 ]
 [-0.024]
 [-0.029]
 [-0.031]
 [-0.035]] [[96.484]
 [95.717]
 [96.252]
 [94.496]
 [96.183]
 [95.45 ]
 [96.367]] [[0.604]
 [0.584]
 [0.59 ]
 [0.573]
 [0.59 ]
 [0.579]
 [0.586]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.82347596
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.90282387
true state number:  [0, 100]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.25130913
true state number:  [0, 94]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00018186841
true state number:  [0, 95]
comparator state stnum:  [0, 98]
printing an ep nov before normalisation:  99.07879761501921
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6445364
true state number:  [0, 91]
comparator state stnum:  [0, 91]
siam score:  -0.8773605
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20] [0.005 0.01  0.014 0.019 0.024 0.029 0.033 0.038 0.043 0.048 0.052 0.057
 0.062 0.067 0.071 0.076 0.081 0.086 0.09  0.095]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0003686149
true state number:  [0, 64]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7230432
true state number:  [0, 36]
comparator state stnum:  [0, 36]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
printing an ep nov before normalisation:  97.81277656555176
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38] [0.001 0.003 0.004 0.005 0.007 0.008 0.009 0.011 0.012 0.013 0.015 0.016
 0.018 0.019 0.02  0.022 0.023 0.024 0.026 0.027 0.028 0.03  0.031 0.032
 0.034 0.035 0.036 0.038 0.039 0.04  0.042 0.043 0.045 0.046 0.047 0.049
 0.05  0.051]
maxi score, test score, baseline:  -0.9940176470588236 -1.0 -0.9940176470588236
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [33, 19, 21, 34, 38, 28, 49, 21, 19, 20, 15, 19, 32, 40, 54, 39, 19, 45, 15, 11] [36, 19, 22, 35, 39, 29, 50, 22, 20, 23, 17, 20, 33, 41, 56, 40, 20, 46, 16, 11] [14, 3, 11, 12, 25, 4, 30, 4, 38, 39, 35, 5, 3, 5, 36, 17, 42, 22, 35, 22]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.00022663135
true state number:  [0, 36]
comparator state stnum:  [0, 65]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.003 0.003 0.003 0.003
 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007
 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01  0.01  0.01
 0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.013 0.014
 0.014 0.014 0.015 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017
 0.017 0.018 0.018 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021
 0.021 0.021 0.022 0.022 0.022 0.022 0.023 0.023 0.023 0.024 0.024]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9227545
true state number:  [0, 101]
comparator state stnum:  [0, 101]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.97592473
true state number:  [0, 98]
comparator state stnum:  [0, 98]
Printing some Q and Qe and total Qs values:  [[0.346]
 [0.293]
 [0.368]
 [0.376]
 [0.377]
 [0.35 ]
 [0.36 ]] [[90.439]
 [94.717]
 [89.97 ]
 [89.274]
 [88.622]
 [86.785]
 [90.039]] [[0.926]
 [0.928]
 [0.942]
 [0.942]
 [0.935]
 [0.884]
 [0.936]]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  3.081347e-06
true state number:  [0, 98]
comparator state stnum:  [0, 94]
printing an ep nov before normalisation:  97.09010154963337
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.84409547
true state number:  [0, 63]
comparator state stnum:  [0, 63]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0003080845
true state number:  [0, 95]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  98.62768010173995
ep length:  100
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8433623
true state number:  [0, 35]
comparator state stnum:  [0, 35]
maxi score, test score, baseline:  -0.9940176470588236 -1.0 -0.9940176470588236
printing an ep nov before normalisation:  73.84219611794049
in main func line 156:  386
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48] [0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.007 0.008 0.009 0.009 0.01
 0.011 0.012 0.013 0.014 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02
 0.021 0.022 0.023 0.024 0.025 0.026 0.026 0.027 0.028 0.029 0.03  0.031
 0.031 0.032 0.033 0.034 0.035 0.036 0.037 0.037 0.038 0.039 0.04  0.041]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.0108724e-08
true state number:  [0, 99]
comparator state stnum:  [0, 63]
ep length:  39
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8840515
true state number:  [0, 64]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8986723
true state number:  [0, 71]
comparator state stnum:  [0, 71]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00044980762
true state number:  [0, 64]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.91952705
true state number:  [0, 99]
comparator state stnum:  [0, 99]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6877691
true state number:  [0, 65]
comparator state stnum:  [0, 65]
pos losses:  {0: 0.7541443, 1: 0.75162673, 2: 0.7495487, 3: 0.74283767, 4: 0.73431563}
neg losses:  {0: 0.24277732, 1: 0.24579541, 2: 0.2509984, 3: 0.2539189, 4: 0.2561903}
sample 1s:  [0.975 0.902 0.745 0.871 0.614 0.712 0.921 0.727 0.87  0.965]
neg positives:  [0.    0.001 0.017 0.001 0.002 0.002 0.01  0.042 0.012 0.   ]
Printing some Q and Qe and total Qs values:  [[-0.012]
 [-0.012]
 [-0.013]
 [-0.012]
 [-0.012]
 [-0.01 ]
 [-0.011]] [[99.88 ]
 [99.88 ]
 [98.48 ]
 [98.489]
 [99.88 ]
 [98.495]
 [98.482]] [[1.655]
 [1.655]
 [1.61 ]
 [1.611]
 [1.655]
 [1.613]
 [1.611]]
printing an ep nov before normalisation:  95.5763153268264
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.039336476
true state number:  [0, 132]
comparator state stnum:  [0, 96]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.005830119
true state number:  [0, 102]
comparator state stnum:  [0, 101]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.000124038
true state number:  [0, 64]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9940176470588236 -1.0 -0.9940176470588236
maxi score, test score, baseline:  -0.9940176470588236 -1.0 -0.9940176470588236
probs:  [0.1278915158295269, 0.11857740085200637, 0.14779849255328137, 0.36022890571795124, 0.11616061883160017, 0.129343066215634]
siam score:  -0.8760077
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.79296017
true state number:  [0, 62]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7429533
true state number:  [0, 62]
comparator state stnum:  [0, 62]
printing an ep nov before normalisation:  98.26003153460007
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.19322897
true state number:  [0, 62]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.5840381
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  97.00716080676476
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.62204224
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.823636
true state number:  [0, 63]
comparator state stnum:  [0, 63]
printing an ep nov before normalisation:  96.68462987904157
ep length:  38
printing an ep nov before normalisation:  97.31297020605687
Printing some Q and Qe and total Qs values:  [[-0.028]
 [-0.032]
 [-0.024]
 [-0.023]
 [-0.025]
 [-0.024]
 [-0.028]] [[92.862]
 [94.409]
 [85.519]
 [93.723]
 [93.769]
 [85.519]
 [94.244]] [[0.85 ]
 [0.875]
 [0.713]
 [0.871]
 [0.87 ]
 [0.713]
 [0.876]]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.70401394
true state number:  [0, 66]
comparator state stnum:  [0, 66]
printing an ep nov before normalisation:  97.23225920491868
line 256 mcts: sample exp_bonus 89.50839283772449
printing an ep nov before normalisation:  76.76152050065856
ep length:  36
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28] [0.002 0.005 0.007 0.01  0.012 0.015 0.017 0.02  0.022 0.025 0.027 0.03
 0.032 0.034 0.037 0.039 0.042 0.044 0.047 0.049 0.052 0.054 0.057 0.059
 0.062 0.064 0.067 0.069]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0003202833
true state number:  [0, 64]
comparator state stnum:  [0, 98]
using another actor
from probs:  [0.1289393831017826, 0.11954895378713293, 0.14710109254550063, 0.3592344941985629, 0.11477324973568254, 0.1304028266313384]
siam score:  -0.87335694
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42] [0.001 0.002 0.003 0.004 0.006 0.007 0.008 0.009 0.01  0.011 0.012 0.013
 0.014 0.016 0.017 0.018 0.019 0.02  0.021 0.022 0.023 0.024 0.025 0.027
 0.028 0.029 0.03  0.031 0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04
 0.041 0.042 0.043 0.044 0.045 0.047]
printing an ep nov before normalisation:  39.78929934293882
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86] [0.    0.001 0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003
 0.003 0.004 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.006
 0.007 0.007 0.007 0.007 0.008 0.008 0.008 0.009 0.009 0.009 0.009 0.01
 0.01  0.01  0.01  0.011 0.011 0.011 0.011 0.012 0.012 0.012 0.013 0.013
 0.013 0.013 0.014 0.014 0.014 0.014 0.015 0.015 0.015 0.016 0.016 0.016
 0.016 0.017 0.017 0.017 0.017 0.018 0.018 0.018 0.018 0.019 0.019 0.019
 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.021 0.022 0.022 0.022 0.022
 0.023 0.023]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8855155
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7443428
true state number:  [0, 62]
comparator state stnum:  [0, 62]
siam score:  -0.8728633
maxi score, test score, baseline:  -0.9940520467836257 -1.0 -0.9940520467836257
probs:  [0.12932669732973137, 0.11990805935626456, 0.14567731659650918, 0.3603136102599005, 0.11397977944368645, 0.130794537013908]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8621983
true state number:  [0, 64]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  5.6611725e-06
true state number:  [0, 101]
comparator state stnum:  [0, 92]
printing an ep nov before normalisation:  69.47440384280188
pos losses:  {0: 0.7569641, 1: 0.754962, 2: 0.75322354, 3: 0.7468611, 4: 0.7385337}
neg losses:  {0: 0.23910497, 1: 0.2421072, 2: 0.2473752, 3: 0.25017375, 4: 0.25227597}
sample 1s:  [0.948 0.777 0.626 0.989 0.88  0.855 0.993 0.307 0.989 0.854]
neg positives:  [0.21  0.012 0.005 0.013 0.    0.023 0.896 0.789 0.002 0.783]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8161758
true state number:  [0, 35]
comparator state stnum:  [0, 35]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49] [0.001 0.002 0.002 0.003 0.004 0.005 0.006 0.007 0.007 0.008 0.009 0.01
 0.011 0.011 0.012 0.013 0.014 0.015 0.016 0.016 0.017 0.018 0.019 0.02
 0.02  0.021 0.022 0.023 0.024 0.024 0.025 0.026 0.027 0.028 0.029 0.029
 0.03  0.031 0.032 0.033 0.033 0.034 0.035 0.036 0.037 0.038 0.038 0.039
 0.04 ]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.6329715
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.6948228
true state number:  [0, 133]
comparator state stnum:  [0, 133]
printing an ep nov before normalisation:  99.1218355583491
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29] [0.002 0.005 0.007 0.009 0.011 0.014 0.016 0.018 0.021 0.023 0.025 0.028
 0.03  0.032 0.034 0.037 0.039 0.041 0.044 0.046 0.048 0.051 0.053 0.055
 0.057 0.06  0.062 0.064 0.067]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.01  0.01  0.011 0.012 0.012 0.013 0.014 0.014 0.015 0.016
 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023 0.023
 0.024 0.025 0.025 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031
 0.032 0.032 0.033 0.034 0.034 0.035 0.036]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.91346234
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.52701515
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.17901859823314
maxi score, test score, baseline:  -0.9940860465116279 -1.0 -0.9940860465116279
probs:  [0.12951680347595226, 0.12008431917361538, 0.14589145976933998, 0.3608432900015953, 0.11414732410354478, 0.12951680347595226]
printing an ep nov before normalisation:  97.9920482635498
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.69047487
true state number:  [0, 34]
comparator state stnum:  [0, 34]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.53085166
true state number:  [0, 91]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34] [0.002 0.003 0.005 0.007 0.008 0.01  0.012 0.013 0.015 0.017 0.018 0.02
 0.022 0.024 0.025 0.027 0.029 0.03  0.032 0.034 0.035 0.037 0.039 0.04
 0.042 0.044 0.045 0.047 0.049 0.05  0.052 0.054 0.055 0.057]
maxi score, test score, baseline:  -0.9940860465116279 -1.0 -0.9940860465116279
printing an ep nov before normalisation:  70.32496309195892
printing an ep nov before normalisation:  83.65545116394475
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.006 0.006 0.007 0.008 0.008
 0.009 0.01  0.01  0.011 0.012 0.013 0.013 0.014 0.015 0.015 0.016 0.017
 0.017 0.018 0.019 0.02  0.02  0.021 0.022 0.022 0.023 0.024 0.024 0.025
 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031 0.032 0.033 0.034
 0.034 0.035 0.036 0.036 0.037]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.752251
true state number:  [0, 93]
comparator state stnum:  [0, 93]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55] [0.001 0.001 0.002 0.003 0.003 0.004 0.005 0.005 0.006 0.006 0.007 0.008
 0.008 0.009 0.01  0.01  0.011 0.012 0.012 0.013 0.014 0.014 0.015 0.016
 0.016 0.017 0.018 0.018 0.019 0.019 0.02  0.021 0.021 0.022 0.023 0.023
 0.024 0.025 0.025 0.026 0.027 0.027 0.028 0.029 0.029 0.03  0.031 0.031
 0.032 0.032 0.033 0.034 0.034 0.035 0.036]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.7850697
true state number:  [0, 65]
comparator state stnum:  [0, 65]
printing an ep nov before normalisation:  91.66980839980567
maxi score, test score, baseline:  -0.9940860465116279 -1.0 -0.9940860465116279
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9087665
true state number:  [0, 96]
comparator state stnum:  [0, 96]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.04267606
true state number:  [0, 102]
comparator state stnum:  [0, 100]
pos losses:  {0: 0.7603534, 1: 0.75835866, 2: 0.7566775, 3: 0.750334, 4: 0.74211365}
neg losses:  {0: 0.23582526, 1: 0.23878196, 2: 0.24407794, 3: 0.24691781, 4: 0.24887775}
sample 1s:  [0.89  0.778 0.858 0.678 0.895 0.847 0.943 0.92  0.886 0.684]
neg positives:  [0.034 0.454 0.    0.33  0.611 0.921 0.002 0.009 0.312 0.   ]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [71, 24, 11, 11, 21, 25, 8, 41, 31, 20, 33, 12, 68, 19, 34, 15, 17, 19, 26, 44] [74, 25, 12, 12, 20, 26, 11, 40, 30, 22, 32, 14, 71, 18, 37, 18, 17, 22, 27, 43] [31, 14, 0, 0, 8, 7, 28, 13, 16, 31, 14, 0, 20, 6, 18, 4, 3, 7, 3, 18]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8664419
true state number:  [0, 100]
comparator state stnum:  [0, 100]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  8.821855e-07
true state number:  [0, 63]
comparator state stnum:  [0, 91]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9417205
true state number:  [0, 96]
comparator state stnum:  [0, 96]
maxi score, test score, baseline:  -0.9941196531791907 -1.0 -0.9941196531791907
printing an ep nov before normalisation:  94.54959563996603
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.22859319
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  2.9377807e-05
true state number:  [0, 97]
comparator state stnum:  [0, 102]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8454789
true state number:  [0, 35]
comparator state stnum:  [0, 35]
printing an ep nov before normalisation:  41.09051823616028
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.010829665
true state number:  [0, 92]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.59224699347162
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9460962
true state number:  [0, 94]
comparator state stnum:  [0, 94]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.93141246
true state number:  [0, 64]
comparator state stnum:  [0, 64]
printing an ep nov before normalisation:  99.10026794257871
printing an ep nov before normalisation:  81.94971261300827
printing an ep nov before normalisation:  88.74387559416171
line 256 mcts: sample exp_bonus 89.94021635731517
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  3.4808018e-08
true state number:  [0, 95]
comparator state stnum:  [0, 62]
maxi score, test score, baseline:  -0.9941196531791907 -1.0 -0.9941196531791907
probs:  [0.12850171463683951, 0.11933439700091573, 0.1479967698626015, 0.36211620731174293, 0.11354919655106091, 0.12850171463683951]
printing an ep nov before normalisation:  99.87302727531642
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.0038347326
true state number:  [0, 100]
comparator state stnum:  [0, 97]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25] [0.003 0.006 0.009 0.012 0.015 0.018 0.022 0.025 0.028 0.031 0.034 0.037
 0.04  0.043 0.046 0.049 0.052 0.055 0.058 0.062 0.065 0.068 0.071 0.074
 0.077]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.617485
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9941528735632184 -1.0 -0.9941528735632184
probs:  [0.12891979715339477, 0.11972265229601166, 0.1466243010038572, 0.36329438907279404, 0.1139186288423233, 0.12752023163161905]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.6781437
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.9176921
true state number:  [0, 92]
comparator state stnum:  [0, 92]
maxi score, test score, baseline:  -0.9941528735632184 -1.0 -0.9941528735632184
probs:  [0.12713299409844336, 0.12065483180453838, 0.1477659410045307, 0.3622298434232103, 0.11370326534300189, 0.1285131243262753]
printing an ep nov before normalisation:  32.16579741611978
using explorer policy with actor:  1
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.49452838
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  91.7607206585149
ep length:  100
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  4.1768977e-05
true state number:  [0, 91]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.9584756
true state number:  [0, 97]
comparator state stnum:  [0, 97]
maxi score, test score, baseline:  -0.9941528735632184 -1.0 -0.9941528735632184
from probs:  [0.12713299409844336, 0.12065483180453838, 0.1477659410045307, 0.3622298434232103, 0.11370326534300189, 0.1285131243262753]
maxi score, test score, baseline:  -0.9941857142857143 -1.0 -0.9941857142857143
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36] [0.002 0.003 0.005 0.006 0.008 0.009 0.011 0.012 0.014 0.015 0.017 0.018
 0.02  0.021 0.023 0.024 0.026 0.027 0.029 0.03  0.032 0.033 0.035 0.036
 0.038 0.039 0.041 0.042 0.044 0.045 0.047 0.048 0.05  0.051 0.053 0.054]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.6592679
true state number:  [0, 91]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  94.37877004260606
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5441638
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.63234204
true state number:  [0, 100]
comparator state stnum:  [0, 100]
Printing some Q and Qe and total Qs values:  [[0.547]
 [0.658]
 [0.547]
 [0.547]
 [0.547]
 [0.547]
 [0.547]] [[68.228]
 [85.159]
 [68.228]
 [68.228]
 [68.228]
 [68.228]
 [68.228]] [[1.161]
 [1.478]
 [1.161]
 [1.161]
 [1.161]
 [1.161]
 [1.161]]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81] [0.    0.001 0.001 0.001 0.002 0.002 0.002 0.002 0.003 0.003 0.003 0.004
 0.004 0.004 0.005 0.005 0.005 0.005 0.006 0.006 0.006 0.007 0.007 0.007
 0.008 0.008 0.008 0.008 0.009 0.009 0.009 0.01  0.01  0.01  0.011 0.011
 0.011 0.011 0.012 0.012 0.012 0.013 0.013 0.013 0.014 0.014 0.014 0.014
 0.015 0.015 0.015 0.016 0.016 0.016 0.017 0.017 0.017 0.017 0.018 0.018
 0.018 0.019 0.019 0.019 0.02  0.02  0.02  0.02  0.021 0.021 0.021 0.022
 0.022 0.022 0.023 0.023 0.023 0.023 0.024 0.024 0.024]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47] [0.001 0.002 0.003 0.004 0.004 0.005 0.006 0.007 0.008 0.009 0.01  0.011
 0.012 0.012 0.013 0.014 0.015 0.016 0.017 0.018 0.019 0.02  0.02  0.021
 0.022 0.023 0.024 0.025 0.026 0.027 0.027 0.028 0.029 0.03  0.031 0.032
 0.033 0.034 0.035 0.035 0.036 0.037 0.038 0.039 0.04  0.041 0.042]
unit testing: printing subject indexes, ture ones and takes ones to see it looks right:  [22, 37, 71, 34, 17, 28, 25, 33, 22, 11, 20, 28, 20, 43, 4, 22, 38, 20, 30, 47] [23, 37, 72, 34, 17, 29, 26, 32, 23, 13, 21, 28, 19, 44, 7, 21, 38, 19, 31, 46] [8, 27, 52, 54, 34, 16, 4, 20, 0, 32, 6, 42, 33, 33, 17, 10, 27, 5, 15, 19]
Printing some Q and Qe and total Qs values:  [[0.466]
 [0.57 ]
 [0.475]
 [0.483]
 [0.485]
 [0.483]
 [0.495]] [[33.296]
 [79.261]
 [34.145]
 [34.456]
 [34.612]
 [34.776]
 [35.496]] [[0.669]
 [1.323]
 [0.688]
 [0.7  ]
 [0.704]
 [0.703]
 [0.724]]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.89460725
true state number:  [0, 101]
comparator state stnum:  [0, 101]
maxi score, test score, baseline:  -0.9941857142857143 -1.0 -0.9941857142857143
probs:  [0.12728791344845, 0.11958326370142447, 0.14794600558266216, 0.36267127365964524, 0.11384181797647758, 0.12866972563134044]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40] [0.001 0.002 0.004 0.005 0.006 0.007 0.009 0.01  0.011 0.012 0.013 0.015
 0.016 0.017 0.018 0.02  0.021 0.022 0.023 0.024 0.026 0.027 0.028 0.029
 0.03  0.032 0.033 0.034 0.035 0.037 0.038 0.039 0.04  0.041 0.043 0.044
 0.045 0.046 0.048 0.049]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.43770295
true state number:  [0, 93]
comparator state stnum:  [0, 93]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.00091964967
true state number:  [0, 95]
comparator state stnum:  [0, 97]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8714
true state number:  [0, 100]
comparator state stnum:  [0, 100]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33] [0.002 0.004 0.005 0.007 0.009 0.011 0.012 0.014 0.016 0.018 0.02  0.021
 0.023 0.025 0.027 0.029 0.03  0.032 0.034 0.036 0.037 0.039 0.041 0.043
 0.045 0.046 0.048 0.05  0.052 0.053 0.055 0.057 0.059]
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  0.71233946
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9942181818181818 -1.0 -0.9942181818181818
printing an ep nov before normalisation:  99.84572410583496
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.7540793
true state number:  [0, 62]
comparator state stnum:  [0, 62]
options / WEIGHTS  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30] [0.002 0.004 0.006 0.009 0.011 0.013 0.015 0.017 0.019 0.022 0.024 0.026
 0.028 0.03  0.032 0.034 0.037 0.039 0.041 0.043 0.045 0.047 0.049 0.052
 0.054 0.056 0.058 0.06  0.062 0.065]
ep length:  42
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.69965726
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.53622246
true state number:  [0, 91]
comparator state stnum:  [0, 91]
maxi score, test score, baseline:  -0.9942502824858758 -1.0 -0.9942502824858758
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.0007017108
true state number:  [0, 96]
comparator state stnum:  [0, 64]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.71029556
true state number:  [0, 91]
comparator state stnum:  [0, 91]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  0.018484196
true state number:  [0, 62]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  99.40802574157715
printing an ep nov before normalisation:  93.98949983436933
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.78555506
true state number:  [0, 95]
comparator state stnum:  [0, 95]
we're testing an obs printing thing on K:  1
Label:  tensor(0.)
prediction:  2.5259526e-08
true state number:  [0, 65]
comparator state stnum:  [0, 91]
printing an ep nov before normalisation:  95.84934304285535
we're testing an obs printing thing on K:  0
Label:  tensor(0.)
prediction:  1.6872563e-06
true state number:  [0, 36]
comparator state stnum:  [0, 62]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.8940833
true state number:  [0, 66]
comparator state stnum:  [0, 66]
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.8288374
true state number:  [0, 65]
comparator state stnum:  [0, 65]
printing an ep nov before normalisation:  83.19007160367207
ep length:  64
we're testing an obs printing thing on K:  0
Label:  tensor(1.)
prediction:  0.5417892
true state number:  [0, 65]
comparator state stnum:  [0, 65]
we're testing an obs printing thing on K:  1
Label:  tensor(1.)
prediction:  0.025086721
true state number:  [0, 98]
comparator state stnum:  [0, 99]
Starting evaluation
